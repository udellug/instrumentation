<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.01%)</title><rect x="10.0" y="389" width="0.2" height="15.0" fill="rgb(212,108,7)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="1181.0" y="165" width="0.2" height="15.0" fill="rgb(205,32,1)" rx="2" ry="2" />
<text  x="1184.03" y="175.5" ></text>
</g>
<g >
<title>regex::literal::imp::SingleByteSet::_find (300 samples, 3.93%)</title><rect x="746.0" y="133" width="46.3" height="15.0" fill="rgb(220,109,36)" rx="2" ry="2" />
<text  x="748.95" y="143.5" >rege..</text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (6 samples, 0.08%)</title><rect x="60.6" y="357" width="0.9" height="15.0" fill="rgb(231,19,52)" rx="2" ry="2" />
<text  x="63.56" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr (58 samples, 0.76%)</title><rect x="963.0" y="213" width="9.0" height="15.0" fill="rgb(245,229,17)" rx="2" ry="2" />
<text  x="966.03" y="223.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="12.8" y="437" width="0.4" height="15.0" fill="rgb(252,199,36)" rx="2" ry="2" />
<text  x="15.78" y="447.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::ReentrantMutex::unlock (11 samples, 0.14%)</title><rect x="1106.4" y="325" width="1.7" height="15.0" fill="rgb(246,202,32)" rx="2" ry="2" />
<text  x="1109.35" y="335.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_mul (14 samples, 0.18%)</title><rect x="635.4" y="245" width="2.2" height="15.0" fill="rgb(220,156,25)" rx="2" ry="2" />
<text  x="638.41" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::&lt;impl [T]&gt;::join (456 samples, 5.97%)</title><rect x="44.5" y="405" width="70.5" height="15.0" fill="rgb(245,132,25)" rx="2" ry="2" />
<text  x="47.48" y="415.5" >alloc::..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="806.7" y="165" width="0.2" height="15.0" fill="rgb(230,208,15)" rx="2" ry="2" />
<text  x="809.72" y="175.5" ></text>
</g>
<g >
<title>std::panicking::panicking (2 samples, 0.03%)</title><rect x="914.5" y="261" width="0.3" height="15.0" fill="rgb(217,43,37)" rx="2" ry="2" />
<text  x="917.48" y="271.5" ></text>
</g>
<g >
<title>core::alloc::Layout::array (15 samples, 0.20%)</title><rect x="635.3" y="277" width="2.3" height="15.0" fill="rgb(235,148,34)" rx="2" ry="2" />
<text  x="638.25" y="287.5" ></text>
</g>
<g >
<title>choose::config::Config::parse_choice (1 samples, 0.01%)</title><rect x="10.0" y="597" width="0.2" height="15.0" fill="rgb(238,56,11)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="472.8" y="197" width="0.1" height="15.0" fill="rgb(239,95,2)" rx="2" ry="2" />
<text  x="475.75" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (8 samples, 0.10%)</title><rect x="925.0" y="293" width="1.2" height="15.0" fill="rgb(232,200,28)" rx="2" ry="2" />
<text  x="927.99" y="303.5" ></text>
</g>
<g >
<title>choose::choice::Choice::is_reverse_range (80 samples, 1.05%)</title><rect x="488.4" y="149" width="12.3" height="15.0" fill="rgb(231,183,7)" rx="2" ry="2" />
<text  x="491.37" y="159.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="395.8" y="37" width="0.1" height="15.0" fill="rgb(212,207,1)" rx="2" ry="2" />
<text  x="398.76" y="47.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count (1 samples, 0.01%)</title><rect x="914.6" y="245" width="0.2" height="15.0" fill="rgb(234,184,10)" rx="2" ry="2" />
<text  x="917.64" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (1 samples, 0.01%)</title><rect x="10.0" y="357" width="0.2" height="15.0" fill="rgb(253,55,20)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal (7,630 samples, 99.97%)</title><rect x="10.3" y="565" width="1179.7" height="15.0" fill="rgb(248,194,26)" rx="2" ry="2" />
<text  x="13.31" y="575.5" >std::rt::lang_start_internal</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (22 samples, 0.29%)</title><rect x="292.5" y="69" width="3.4" height="15.0" fill="rgb(243,38,36)" rx="2" ry="2" />
<text  x="295.48" y="79.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (1 samples, 0.01%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(232,79,0)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="770.7" y="101" width="0.1" height="15.0" fill="rgb(220,167,24)" rx="2" ry="2" />
<text  x="773.69" y="111.5" ></text>
</g>
<g >
<title>std::io::stdio::print_to::_$u7b$$u7b$closure$u7d$$u7d$::h9029fae50146dab1 (544 samples, 7.13%)</title><rect x="1105.9" y="389" width="84.1" height="15.0" fill="rgb(238,7,27)" rx="2" ry="2" />
<text  x="1108.89" y="399.5" >std::io::..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="395.8" y="69" width="0.1" height="15.0" fill="rgb(253,182,0)" rx="2" ry="2" />
<text  x="398.76" y="79.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (248 samples, 3.25%)</title><rect x="936.9" y="277" width="38.3" height="15.0" fill="rgb(240,89,23)" rx="2" ry="2" />
<text  x="939.90" y="287.5" >std..</text>
</g>
<g >
<title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="633.7" y="229" width="0.2" height="15.0" fill="rgb(247,138,43)" rx="2" ry="2" />
<text  x="636.71" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="10.0" y="373" width="0.2" height="15.0" fill="rgb(219,135,23)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>core::mem::swap (1 samples, 0.01%)</title><rect x="1181.0" y="197" width="0.2" height="15.0" fill="rgb(250,8,12)" rx="2" ry="2" />
<text  x="1184.03" y="207.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (41 samples, 0.54%)</title><rect x="433.8" y="149" width="6.3" height="15.0" fill="rgb(227,37,24)" rx="2" ry="2" />
<text  x="436.79" y="159.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.03%)</title><rect x="889.7" y="341" width="0.4" height="15.0" fill="rgb(237,116,22)" rx="2" ry="2" />
<text  x="892.74" y="351.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::done (3 samples, 0.04%)</title><rect x="914.3" y="293" width="0.5" height="15.0" fill="rgb(215,91,3)" rx="2" ry="2" />
<text  x="917.33" y="303.5" ></text>
</g>
<g >
<title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (130 samples, 1.70%)</title><rect x="13.2" y="437" width="20.1" height="15.0" fill="rgb(213,160,42)" rx="2" ry="2" />
<text  x="16.25" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (3 samples, 0.04%)</title><rect x="956.7" y="133" width="0.5" height="15.0" fill="rgb(242,60,29)" rx="2" ry="2" />
<text  x="959.69" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (104 samples, 1.36%)</title><rect x="68.4" y="357" width="16.1" height="15.0" fill="rgb(225,159,43)" rx="2" ry="2" />
<text  x="71.44" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_layout (7 samples, 0.09%)</title><rect x="634.2" y="277" width="1.1" height="15.0" fill="rgb(232,54,35)" rx="2" ry="2" />
<text  x="637.17" y="287.5" ></text>
</g>
<g >
<title>std::panicking::panicking (3 samples, 0.04%)</title><rect x="1108.7" y="293" width="0.4" height="15.0" fill="rgb(241,60,45)" rx="2" ry="2" />
<text  x="1111.67" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::done (7 samples, 0.09%)</title><rect x="1108.1" y="325" width="1.0" height="15.0" fill="rgb(212,28,10)" rx="2" ry="2" />
<text  x="1111.06" y="335.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.05%)</title><rect x="1061.8" y="325" width="0.6" height="15.0" fill="rgb(207,41,49)" rx="2" ry="2" />
<text  x="1064.83" y="335.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::new (1 samples, 0.01%)</title><rect x="10.0" y="581" width="0.2" height="15.0" fill="rgb(232,66,24)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (8 samples, 0.10%)</title><rect x="794.7" y="165" width="1.2" height="15.0" fill="rgb(233,133,28)" rx="2" ry="2" />
<text  x="797.66" y="175.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (4 samples, 0.05%)</title><rect x="642.2" y="325" width="0.6" height="15.0" fill="rgb(215,154,17)" rx="2" ry="2" />
<text  x="645.21" y="335.5" ></text>
</g>
<g >
<title>std::memchr::memrchr (4 samples, 0.05%)</title><rect x="1180.3" y="261" width="0.6" height="15.0" fill="rgb(210,224,8)" rx="2" ry="2" />
<text  x="1183.26" y="271.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="108.8" y="309" width="0.2" height="15.0" fill="rgb(228,21,26)" rx="2" ry="2" />
<text  x="111.80" y="319.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="27.9" y="309" width="0.2" height="15.0" fill="rgb(213,34,48)" rx="2" ry="2" />
<text  x="30.94" y="319.5" ></text>
</g>
<g >
<title>core::fmt::Formatter::pad (51 samples, 0.67%)</title><rect x="976.2" y="293" width="7.9" height="15.0" fill="rgb(214,183,42)" rx="2" ry="2" />
<text  x="979.17" y="303.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="914.6" y="229" width="0.2" height="15.0" fill="rgb(237,132,15)" rx="2" ry="2" />
<text  x="917.64" y="239.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.21%)</title><rect x="58.1" y="357" width="2.5" height="15.0" fill="rgb(246,111,34)" rx="2" ry="2" />
<text  x="61.08" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.05%)</title><rect x="1181.2" y="341" width="0.6" height="15.0" fill="rgb(227,125,0)" rx="2" ry="2" />
<text  x="1184.19" y="351.5" ></text>
</g>
<g >
<title>core::cmp::max (1 samples, 0.01%)</title><rect x="633.7" y="261" width="0.2" height="15.0" fill="rgb(207,45,24)" rx="2" ry="2" />
<text  x="636.71" y="271.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (4 samples, 0.05%)</title><rect x="642.2" y="309" width="0.6" height="15.0" fill="rgb(220,171,20)" rx="2" ry="2" />
<text  x="645.21" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (101 samples, 1.32%)</title><rect x="68.9" y="325" width="15.6" height="15.0" fill="rgb(218,103,12)" rx="2" ry="2" />
<text  x="71.91" y="335.5" ></text>
</g>
<g >
<title>regex_syntax::parser::Parser::parse (1 samples, 0.01%)</title><rect x="10.0" y="517" width="0.2" height="15.0" fill="rgb(225,104,2)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals::_$u7b$$u7b$closure$u7d$$u7d$::hb4a1f9e0f6d9d052 (82 samples, 1.07%)</title><rect x="279.8" y="117" width="12.7" height="15.0" fill="rgb(222,155,54)" rx="2" ry="2" />
<text  x="282.80" y="127.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::ends_with (2 samples, 0.03%)</title><rect x="13.9" y="389" width="0.3" height="15.0" fill="rgb(216,114,12)" rx="2" ry="2" />
<text  x="16.87" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (360 samples, 4.72%)</title><rect x="570.9" y="213" width="55.7" height="15.0" fill="rgb(209,132,26)" rx="2" ry="2" />
<text  x="573.93" y="223.5" >_int_..</text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.01%)</title><rect x="500.7" y="197" width="0.2" height="15.0" fill="rgb(254,56,29)" rx="2" ry="2" />
<text  x="503.74" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find::check::_$u7b$$u7b$closure$u7d$$u7d$::hd38a2ab49ba52c64 (3 samples, 0.04%)</title><rect x="808.1" y="229" width="0.5" height="15.0" fill="rgb(226,47,46)" rx="2" ry="2" />
<text  x="811.11" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (127 samples, 1.66%)</title><rect x="830.5" y="357" width="19.7" height="15.0" fill="rgb(206,104,18)" rx="2" ry="2" />
<text  x="833.53" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (3 samples, 0.04%)</title><rect x="895.8" y="277" width="0.4" height="15.0" fill="rgb(251,154,30)" rx="2" ry="2" />
<text  x="898.77" y="287.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,213 samples, 15.89%)</title><rect x="642.8" y="309" width="187.6" height="15.0" fill="rgb(220,70,32)" rx="2" ry="2" />
<text  x="645.83" y="319.5" >&lt;core::iter::adapters::E..</text>
</g>
<g >
<title>&lt;usize as core::ops::arith::AddAssign&gt;::add_assign (3 samples, 0.04%)</title><rect x="471.1" y="197" width="0.4" height="15.0" fill="rgb(248,115,45)" rx="2" ry="2" />
<text  x="474.05" y="207.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (9 samples, 0.12%)</title><rect x="1002.3" y="165" width="1.4" height="15.0" fill="rgb(251,137,25)" rx="2" ry="2" />
<text  x="1005.30" y="175.5" ></text>
</g>
<g >
<title>std::io::stdio::Stdout::lock (17 samples, 0.22%)</title><rect x="1181.8" y="357" width="2.6" height="15.0" fill="rgb(243,165,8)" rx="2" ry="2" />
<text  x="1184.81" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="1180.1" y="213" width="0.2" height="15.0" fill="rgb(245,133,20)" rx="2" ry="2" />
<text  x="1183.10" y="223.5" ></text>
</g>
<g >
<title>regex::compile::Compiler::c (1 samples, 0.01%)</title><rect x="10.2" y="453" width="0.1" height="15.0" fill="rgb(244,184,1)" rx="2" ry="2" />
<text  x="13.15" y="463.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (7,630 samples, 99.97%)</title><rect x="10.3" y="549" width="1179.7" height="15.0" fill="rgb(235,15,5)" rx="2" ry="2" />
<text  x="13.31" y="559.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (127 samples, 1.66%)</title><rect x="830.5" y="341" width="19.7" height="15.0" fill="rgb(218,222,18)" rx="2" ry="2" />
<text  x="833.53" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (23 samples, 0.30%)</title><rect x="142.0" y="245" width="3.6" height="15.0" fill="rgb(210,68,42)" rx="2" ry="2" />
<text  x="145.04" y="255.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (8 samples, 0.10%)</title><rect x="913.1" y="277" width="1.2" height="15.0" fill="rgb(235,162,39)" rx="2" ry="2" />
<text  x="916.09" y="287.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="1108.7" y="245" width="0.4" height="15.0" fill="rgb(217,193,12)" rx="2" ry="2" />
<text  x="1111.67" y="255.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (102 samples, 1.34%)</title><rect x="985.4" y="277" width="15.8" height="15.0" fill="rgb(213,58,31)" rx="2" ry="2" />
<text  x="988.45" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.04%)</title><rect x="108.5" y="325" width="0.5" height="15.0" fill="rgb(243,20,7)" rx="2" ry="2" />
<text  x="111.49" y="335.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::Split as core::iter::traits::iterator::Iterator&gt;::next (1,046 samples, 13.71%)</title><rect x="645.9" y="261" width="161.7" height="15.0" fill="rgb(233,228,52)" rx="2" ry="2" />
<text  x="648.92" y="271.5" >&lt;regex::re_unicode::..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (7 samples, 0.09%)</title><rect x="1002.6" y="133" width="1.1" height="15.0" fill="rgb(240,9,54)" rx="2" ry="2" />
<text  x="1005.61" y="143.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::raw_lock (8 samples, 0.10%)</title><rect x="1188.8" y="325" width="1.2" height="15.0" fill="rgb(235,113,20)" rx="2" ry="2" />
<text  x="1191.76" y="335.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="1181.0" y="245" width="0.2" height="15.0" fill="rgb(230,159,3)" rx="2" ry="2" />
<text  x="1184.03" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (272 samples, 3.56%)</title><rect x="1058.1" y="421" width="42.1" height="15.0" fill="rgb(249,61,46)" rx="2" ry="2" />
<text  x="1061.12" y="431.5" >cor..</text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (1,356 samples, 17.77%)</title><rect x="237.3" y="181" width="209.6" height="15.0" fill="rgb(219,7,33)" rx="2" ry="2" />
<text  x="240.28" y="191.5" >&lt;regex::exec::ExecNoSyncStr..</text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (414 samples, 5.42%)</title><rect x="1116.2" y="261" width="64.1" height="15.0" fill="rgb(227,114,37)" rx="2" ry="2" />
<text  x="1119.25" y="271.5" >&lt;std::i..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (79 samples, 1.04%)</title><rect x="395.8" y="85" width="12.2" height="15.0" fill="rgb(250,171,27)" rx="2" ry="2" />
<text  x="398.76" y="95.5" ></text>
</g>
<g >
<title>std::io::stdio::_print (1,175 samples, 15.40%)</title><rect x="876.4" y="405" width="181.7" height="15.0" fill="rgb(241,174,51)" rx="2" ry="2" />
<text  x="879.45" y="415.5" >std::io::stdio::_print</text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.58%)</title><rect x="440.1" y="165" width="6.8" height="15.0" fill="rgb(232,142,40)" rx="2" ry="2" />
<text  x="443.13" y="175.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (94 samples, 1.23%)</title><rect x="452.8" y="181" width="14.5" height="15.0" fill="rgb(208,77,18)" rx="2" ry="2" />
<text  x="455.81" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.07%)</title><rect x="1115.3" y="165" width="0.8" height="15.0" fill="rgb(219,63,53)" rx="2" ry="2" />
<text  x="1118.32" y="175.5" ></text>
</g>
<g >
<title>core::fmt::write (436 samples, 5.71%)</title><rect x="916.6" y="309" width="67.5" height="15.0" fill="rgb(242,65,26)" rx="2" ry="2" />
<text  x="919.65" y="319.5" >core::f..</text>
</g>
<g >
<title>std::thread::panicking (2 samples, 0.03%)</title><rect x="914.5" y="277" width="0.3" height="15.0" fill="rgb(210,22,32)" rx="2" ry="2" />
<text  x="917.48" y="287.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,778 samples, 23.30%)</title><rect x="172.0" y="197" width="274.9" height="15.0" fill="rgb(247,27,17)" rx="2" ry="2" />
<text  x="175.03" y="207.5" >&lt;regex::re_trait::Matches&lt;R&gt; as core..</text>
</g>
<g >
<title>&lt;regex::re_unicode::Matches as core::iter::traits::iterator::Iterator&gt;::next (1,822 samples, 23.87%)</title><rect x="169.3" y="213" width="281.7" height="15.0" fill="rgb(228,79,8)" rx="2" ry="2" />
<text  x="172.25" y="223.5" >&lt;regex::re_unicode::Matches as core::..</text>
</g>
<g >
<title>std::sys_common::poison::Flag::borrow (13 samples, 0.17%)</title><rect x="1001.8" y="277" width="2.0" height="15.0" fill="rgb(210,191,18)" rx="2" ry="2" />
<text  x="1004.84" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (21 samples, 0.28%)</title><rect x="24.8" y="357" width="3.3" height="15.0" fill="rgb(221,29,22)" rx="2" ry="2" />
<text  x="27.84" y="367.5" ></text>
</g>
<g >
<title>choose::choice::Choice::get_choice_slice::_$u7b$$u7b$closure$u7d$$u7d$::h56a3036b65774dda (1 samples, 0.01%)</title><rect x="830.2" y="245" width="0.2" height="15.0" fill="rgb(226,135,50)" rx="2" ry="2" />
<text  x="833.22" y="255.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write (11 samples, 0.14%)</title><rect x="1114.5" y="245" width="1.7" height="15.0" fill="rgb(250,203,19)" rx="2" ry="2" />
<text  x="1117.55" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (75 samples, 0.98%)</title><rect x="851.2" y="341" width="11.6" height="15.0" fill="rgb(245,145,26)" rx="2" ry="2" />
<text  x="854.24" y="351.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (9 samples, 0.12%)</title><rect x="467.3" y="197" width="1.4" height="15.0" fill="rgb(223,125,4)" rx="2" ry="2" />
<text  x="470.34" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.31%)</title><rect x="84.8" y="309" width="3.7" height="15.0" fill="rgb(205,28,7)" rx="2" ry="2" />
<text  x="87.83" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (11 samples, 0.14%)</title><rect x="1187.1" y="293" width="1.7" height="15.0" fill="rgb(229,63,31)" rx="2" ry="2" />
<text  x="1190.06" y="303.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find::_$u7b$$u7b$closure$u7d$$u7d$::h7b07eff99fc35911 (244 samples, 3.20%)</title><rect x="302.7" y="101" width="37.7" height="15.0" fill="rgb(254,103,21)" rx="2" ry="2" />
<text  x="305.68" y="111.5" >reg..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (6 samples, 0.08%)</title><rect x="1115.2" y="181" width="0.9" height="15.0" fill="rgb(206,18,5)" rx="2" ry="2" />
<text  x="1118.17" y="191.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="806.7" y="197" width="0.2" height="15.0" fill="rgb(212,65,54)" rx="2" ry="2" />
<text  x="809.72" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.05%)</title><rect x="956.5" y="165" width="0.7" height="15.0" fill="rgb(237,193,38)" rx="2" ry="2" />
<text  x="959.54" y="175.5" ></text>
</g>
<g >
<title>core::cell::BorrowRefMut::new (1 samples, 0.01%)</title><rect x="974.2" y="213" width="0.1" height="15.0" fill="rgb(246,34,21)" rx="2" ry="2" />
<text  x="977.16" y="223.5" ></text>
</g>
<g >
<title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (17 samples, 0.22%)</title><rect x="1181.8" y="341" width="2.6" height="15.0" fill="rgb(213,113,8)" rx="2" ry="2" />
<text  x="1184.81" y="351.5" ></text>
</g>
<g >
<title>regex::literal::imp::SingleByteSet::find (604 samples, 7.91%)</title><rect x="340.4" y="117" width="93.4" height="15.0" fill="rgb(249,37,12)" rx="2" ry="2" />
<text  x="343.41" y="127.5" >regex::lite..</text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.17%)</title><rect x="720.0" y="149" width="2.0" height="15.0" fill="rgb(245,98,14)" rx="2" ry="2" />
<text  x="722.98" y="159.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (13 samples, 0.17%)</title><rect x="1181.8" y="309" width="2.0" height="15.0" fill="rgb(237,81,7)" rx="2" ry="2" />
<text  x="1184.81" y="319.5" ></text>
</g>
<g >
<title>_int_realloc (1 samples, 0.01%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(232,152,36)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (6 samples, 0.08%)</title><rect x="547.1" y="213" width="1.0" height="15.0" fill="rgb(252,84,19)" rx="2" ry="2" />
<text  x="550.12" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="10.0" y="309" width="0.2" height="15.0" fill="rgb(250,74,0)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match (23 samples, 0.30%)</title><rect x="792.3" y="181" width="3.6" height="15.0" fill="rgb(238,55,42)" rx="2" ry="2" />
<text  x="795.34" y="191.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="1107.7" y="309" width="0.4" height="15.0" fill="rgb(221,92,2)" rx="2" ry="2" />
<text  x="1110.75" y="319.5" ></text>
</g>
<g >
<title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 1.65%)</title><rect x="895.3" y="309" width="19.5" height="15.0" fill="rgb(212,57,21)" rx="2" ry="2" />
<text  x="898.31" y="319.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Read for alloc::boxed::Box&lt;R&gt;&gt;::read (3 samples, 0.04%)</title><rect x="23.3" y="341" width="0.5" height="15.0" fill="rgb(237,15,52)" rx="2" ry="2" />
<text  x="26.30" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="1181.0" y="277" width="0.2" height="15.0" fill="rgb(205,12,20)" rx="2" ry="2" />
<text  x="1184.03" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (101 samples, 1.32%)</title><rect x="68.9" y="341" width="15.6" height="15.0" fill="rgb(223,107,43)" rx="2" ry="2" />
<text  x="71.91" y="351.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (6 samples, 0.08%)</title><rect x="466.4" y="165" width="0.9" height="15.0" fill="rgb(241,22,38)" rx="2" ry="2" />
<text  x="469.42" y="175.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.04%)</title><rect x="983.6" y="261" width="0.5" height="15.0" fill="rgb(249,86,32)" rx="2" ry="2" />
<text  x="986.59" y="271.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.01%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(224,216,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="15.7" y="389" width="0.2" height="15.0" fill="rgb(232,136,16)" rx="2" ry="2" />
<text  x="18.72" y="399.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="395.9" y="69" width="0.5" height="15.0" fill="rgb(248,75,17)" rx="2" ry="2" />
<text  x="398.91" y="79.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (26 samples, 0.34%)</title><rect x="871.2" y="229" width="4.0" height="15.0" fill="rgb(215,198,14)" rx="2" ry="2" />
<text  x="874.19" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::cvt (4 samples, 0.05%)</title><rect x="1178.9" y="149" width="0.6" height="15.0" fill="rgb(222,155,54)" rx="2" ry="2" />
<text  x="1181.87" y="159.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.25%)</title><rect x="743.0" y="133" width="3.0" height="15.0" fill="rgb(252,189,36)" rx="2" ry="2" />
<text  x="746.02" y="143.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4 samples, 0.05%)</title><rect x="642.2" y="293" width="0.6" height="15.0" fill="rgb(245,84,12)" rx="2" ry="2" />
<text  x="645.21" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (17 samples, 0.22%)</title><rect x="25.2" y="261" width="2.6" height="15.0" fill="rgb(252,113,25)" rx="2" ry="2" />
<text  x="28.15" y="271.5" ></text>
</g>
<g >
<title>core::str::from_utf8 (40 samples, 0.52%)</title><rect x="16.3" y="389" width="6.2" height="15.0" fill="rgb(239,9,52)" rx="2" ry="2" />
<text  x="19.34" y="399.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count::PANIC_COUNT::__getit (9 samples, 0.12%)</title><rect x="1002.3" y="181" width="1.4" height="15.0" fill="rgb(254,53,4)" rx="2" ry="2" />
<text  x="1005.30" y="191.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.26%)</title><rect x="25.0" y="341" width="3.1" height="15.0" fill="rgb(222,30,2)" rx="2" ry="2" />
<text  x="28.00" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (91 samples, 1.19%)</title><rect x="70.5" y="293" width="14.0" height="15.0" fill="rgb(252,183,29)" rx="2" ry="2" />
<text  x="73.45" y="303.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr (4 samples, 0.05%)</title><rect x="1180.3" y="245" width="0.6" height="15.0" fill="rgb(221,114,38)" rx="2" ry="2" />
<text  x="1183.26" y="255.5" ></text>
</g>
<g >
<title>__rdl_alloc (14 samples, 0.18%)</title><rect x="847.1" y="277" width="2.1" height="15.0" fill="rgb(239,93,7)" rx="2" ry="2" />
<text  x="850.07" y="287.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (128 samples, 1.68%)</title><rect x="1038.3" y="277" width="19.8" height="15.0" fill="rgb(250,78,26)" rx="2" ry="2" />
<text  x="1041.33" y="287.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8&gt;&gt;::write (43 samples, 0.56%)</title><rect x="956.4" y="213" width="6.6" height="15.0" fill="rgb(221,206,6)" rx="2" ry="2" />
<text  x="959.38" y="223.5" ></text>
</g>
<g >
<title>__GI___read (1 samples, 0.01%)</title><rect x="23.6" y="277" width="0.2" height="15.0" fill="rgb(254,98,10)" rx="2" ry="2" />
<text  x="26.61" y="287.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.04%)</title><rect x="1108.7" y="213" width="0.4" height="15.0" fill="rgb(205,95,30)" rx="2" ry="2" />
<text  x="1111.67" y="223.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.13%)</title><rect x="1002.3" y="213" width="1.5" height="15.0" fill="rgb(211,222,26)" rx="2" ry="2" />
<text  x="1005.30" y="223.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::Split as core::iter::traits::iterator::Iterator&gt;::next (2,090 samples, 27.38%)</title><rect x="147.9" y="229" width="323.2" height="15.0" fill="rgb(243,99,39)" rx="2" ry="2" />
<text  x="150.91" y="239.5" >&lt;regex::re_unicode::Split as core::iter::tr..</text>
</g>
<g >
<title>core::ptr::drop_in_place (126 samples, 1.65%)</title><rect x="895.3" y="325" width="19.5" height="15.0" fill="rgb(239,180,48)" rx="2" ry="2" />
<text  x="898.31" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (4 samples, 0.05%)</title><rect x="43.2" y="405" width="0.7" height="15.0" fill="rgb(245,64,7)" rx="2" ry="2" />
<text  x="46.24" y="415.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (723 samples, 9.47%)</title><rect x="892.1" y="341" width="111.7" height="15.0" fill="rgb(245,131,51)" rx="2" ry="2" />
<text  x="895.06" y="351.5" >&lt;std::io::std..</text>
</g>
<g >
<title>thread_local::CachedThreadLocal&lt;T&gt;::get_or (56 samples, 0.73%)</title><rect x="867.8" y="325" width="8.6" height="15.0" fill="rgb(225,33,23)" rx="2" ry="2" />
<text  x="870.79" y="335.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::is_anchor_end_match::imp (15 samples, 0.20%)</title><rect x="437.8" y="133" width="2.3" height="15.0" fill="rgb(241,78,26)" rx="2" ry="2" />
<text  x="440.81" y="143.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="1184.1" y="261" width="0.2" height="15.0" fill="rgb(227,116,0)" rx="2" ry="2" />
<text  x="1187.12" y="271.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (451 samples, 5.91%)</title><rect x="1111.5" y="325" width="69.7" height="15.0" fill="rgb(251,120,34)" rx="2" ry="2" />
<text  x="1114.46" y="335.5" >&lt;std::i..</text>
</g>
<g >
<title>_int_free (235 samples, 3.08%)</title><rect x="1063.1" y="341" width="36.3" height="15.0" fill="rgb(248,13,46)" rx="2" ry="2" />
<text  x="1066.06" y="351.5" >_in..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="914.6" y="213" width="0.2" height="15.0" fill="rgb(227,141,52)" rx="2" ry="2" />
<text  x="917.64" y="223.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_try_fold::_$u7b$$u7b$closure$u7d$$u7d$::hf75378fdeeb87fb3 (184 samples, 2.41%)</title><rect x="472.4" y="229" width="28.5" height="15.0" fill="rgb(238,157,11)" rx="2" ry="2" />
<text  x="475.44" y="239.5" >co..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,727 samples, 61.94%)</title><rect x="120.4" y="389" width="730.8" height="15.0" fill="rgb(205,88,8)" rx="2" ry="2" />
<text  x="123.39" y="399.5" >&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter</text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.04%)</title><rect x="15.9" y="389" width="0.4" height="15.0" fill="rgb(216,108,43)" rx="2" ry="2" />
<text  x="18.88" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,321 samples, 30.41%)</title><rect x="142.0" y="277" width="358.9" height="15.0" fill="rgb(213,7,19)" rx="2" ry="2" />
<text  x="145.04" y="287.5" >&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::ite..</text>
</g>
<g >
<title>regex_syntax::ast::parse::Parser::parse (1 samples, 0.01%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(250,162,11)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (69 samples, 0.90%)</title><rect x="1013.9" y="309" width="10.7" height="15.0" fill="rgb(218,215,42)" rx="2" ry="2" />
<text  x="1016.90" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::lock (8 samples, 0.10%)</title><rect x="1188.8" y="309" width="1.2" height="15.0" fill="rgb(251,85,1)" rx="2" ry="2" />
<text  x="1191.76" y="319.5" ></text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (75 samples, 0.98%)</title><rect x="396.4" y="53" width="11.6" height="15.0" fill="rgb(254,228,25)" rx="2" ry="2" />
<text  x="399.38" y="63.5" ></text>
</g>
<g >
<title>alloc::string::String::pop (1 samples, 0.01%)</title><rect x="13.7" y="421" width="0.2" height="15.0" fill="rgb(244,80,27)" rx="2" ry="2" />
<text  x="16.71" y="431.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.05%)</title><rect x="83.1" y="261" width="0.7" height="15.0" fill="rgb(209,177,44)" rx="2" ry="2" />
<text  x="86.13" y="271.5" ></text>
</g>
<g >
<title>&lt;std::io::Guard as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="15.9" y="373" width="0.4" height="15.0" fill="rgb(229,44,24)" rx="2" ry="2" />
<text  x="18.88" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (53 samples, 0.69%)</title><rect x="1004.3" y="341" width="8.2" height="15.0" fill="rgb(243,38,50)" rx="2" ry="2" />
<text  x="1007.31" y="351.5" ></text>
</g>
<g >
<title>std::thread::panicking (10 samples, 0.13%)</title><rect x="1002.3" y="261" width="1.5" height="15.0" fill="rgb(211,98,52)" rx="2" ry="2" />
<text  x="1005.30" y="271.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (26 samples, 0.34%)</title><rect x="446.9" y="197" width="4.1" height="15.0" fill="rgb(254,65,16)" rx="2" ry="2" />
<text  x="449.93" y="207.5" ></text>
</g>
<g >
<title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.24%)</title><rect x="1106.4" y="341" width="2.7" height="15.0" fill="rgb(206,196,18)" rx="2" ry="2" />
<text  x="1109.35" y="351.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="1116.2" y="229" width="0.2" height="15.0" fill="rgb(217,188,3)" rx="2" ry="2" />
<text  x="1119.25" y="239.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (43 samples, 0.56%)</title><rect x="770.8" y="101" width="6.7" height="15.0" fill="rgb(220,43,1)" rx="2" ry="2" />
<text  x="773.85" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="10.0" y="405" width="0.2" height="15.0" fill="rgb(239,69,44)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (3 samples, 0.04%)</title><rect x="1001.8" y="229" width="0.5" height="15.0" fill="rgb(223,133,19)" rx="2" ry="2" />
<text  x="1004.84" y="239.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (129 samples, 1.69%)</title><rect x="88.5" y="341" width="20.0" height="15.0" fill="rgb(240,33,34)" rx="2" ry="2" />
<text  x="91.54" y="351.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (436 samples, 5.71%)</title><rect x="1113.5" y="277" width="67.4" height="15.0" fill="rgb(235,148,9)" rx="2" ry="2" />
<text  x="1116.47" y="287.5" >&lt;std::i..</text>
</g>
<g >
<title>&lt;std::io::stdio::Maybe&lt;W&gt; as std::io::Write&gt;::write (399 samples, 5.23%)</title><rect x="1117.8" y="213" width="61.7" height="15.0" fill="rgb(214,132,35)" rx="2" ry="2" />
<text  x="1120.80" y="223.5" >&lt;std::..</text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.34%)</title><rect x="1100.6" y="421" width="4.1" height="15.0" fill="rgb(247,137,5)" rx="2" ry="2" />
<text  x="1103.63" y="431.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="1116.1" y="181" width="0.1" height="15.0" fill="rgb(222,20,54)" rx="2" ry="2" />
<text  x="1119.10" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find::check::_$u7b$$u7b$closure$u7d$$u7d$::h080e6bb3659e3f62 (105 samples, 1.38%)</title><rect x="814.0" y="229" width="16.2" height="15.0" fill="rgb(236,161,45)" rx="2" ry="2" />
<text  x="816.98" y="239.5" ></text>
</g>
<g >
<title>__rdl_realloc (24 samples, 0.31%)</title><rect x="627.8" y="245" width="3.7" height="15.0" fill="rgb(232,170,14)" rx="2" ry="2" />
<text  x="630.83" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 0.03%)</title><rect x="43.6" y="373" width="0.3" height="15.0" fill="rgb(233,40,2)" rx="2" ry="2" />
<text  x="46.55" y="383.5" ></text>
</g>
<g >
<title>_$LT$core..iter..adapters..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::try_fold::enumerate::_$u7b$$u7b$closure$u7d$$u7d$::hc5536b4b8270958d (9 samples, 0.12%)</title><rect x="471.1" y="213" width="1.3" height="15.0" fill="rgb(250,125,24)" rx="2" ry="2" />
<text  x="474.05" y="223.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="468.6" y="165" width="0.1" height="15.0" fill="rgb(216,18,19)" rx="2" ry="2" />
<text  x="471.58" y="175.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.17%)</title><rect x="720.0" y="133" width="2.0" height="15.0" fill="rgb(254,11,23)" rx="2" ry="2" />
<text  x="722.98" y="143.5" ></text>
</g>
<g >
<title>choose::choice::Choice::is_reverse_range (20 samples, 0.26%)</title><rect x="115.0" y="405" width="3.1" height="15.0" fill="rgb(244,43,8)" rx="2" ry="2" />
<text  x="117.98" y="415.5" ></text>
</g>
<g >
<title>_start (7,630 samples, 99.97%)</title><rect x="10.3" y="613" width="1179.7" height="15.0" fill="rgb(231,41,33)" rx="2" ry="2" />
<text  x="13.31" y="623.5" >_start</text>
</g>
<g >
<title>core::mem::replace (1 samples, 0.01%)</title><rect x="1181.0" y="213" width="0.2" height="15.0" fill="rgb(245,72,27)" rx="2" ry="2" />
<text  x="1184.03" y="223.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr::memrchr_specific (58 samples, 0.76%)</title><rect x="963.0" y="197" width="9.0" height="15.0" fill="rgb(212,11,27)" rx="2" ry="2" />
<text  x="966.03" y="207.5" ></text>
</g>
<g >
<title>regex::exec::ExecBuilder::parse (1 samples, 0.01%)</title><rect x="10.0" y="533" width="0.2" height="15.0" fill="rgb(215,210,46)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.08%)</title><rect x="86.7" y="261" width="0.9" height="15.0" fill="rgb(223,22,6)" rx="2" ry="2" />
<text  x="89.69" y="271.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="10.0" y="613" width="0.3" height="15.0" fill="rgb(232,115,27)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (13 samples, 0.17%)</title><rect x="720.0" y="165" width="2.0" height="15.0" fill="rgb(236,215,44)" rx="2" ry="2" />
<text  x="722.98" y="175.5" ></text>
</g>
<g >
<title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="633.7" y="245" width="0.2" height="15.0" fill="rgb(253,92,35)" rx="2" ry="2" />
<text  x="636.71" y="255.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (3 samples, 0.04%)</title><rect x="23.3" y="325" width="0.5" height="15.0" fill="rgb(241,8,54)" rx="2" ry="2" />
<text  x="26.30" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.08%)</title><rect x="466.4" y="133" width="0.9" height="15.0" fill="rgb(208,87,31)" rx="2" ry="2" />
<text  x="469.42" y="143.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.29%)</title><rect x="292.5" y="53" width="3.4" height="15.0" fill="rgb(234,49,47)" rx="2" ry="2" />
<text  x="295.48" y="63.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (544 samples, 7.13%)</title><rect x="1105.9" y="405" width="84.1" height="15.0" fill="rgb(205,85,29)" rx="2" ry="2" />
<text  x="1108.89" y="415.5" >std::thre..</text>
</g>
<g >
<title>std::io::stdio::_print (3 samples, 0.04%)</title><rect x="888.8" y="373" width="0.5" height="15.0" fill="rgb(208,142,52)" rx="2" ry="2" />
<text  x="891.82" y="383.5" ></text>
</g>
<g >
<title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (1 samples, 0.01%)</title><rect x="10.0" y="469" width="0.2" height="15.0" fill="rgb(238,14,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (113 samples, 1.48%)</title><rect x="1040.0" y="261" width="17.5" height="15.0" fill="rgb(231,112,38)" rx="2" ry="2" />
<text  x="1043.03" y="271.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.05%)</title><rect x="794.0" y="165" width="0.7" height="15.0" fill="rgb(233,160,10)" rx="2" ry="2" />
<text  x="797.04" y="175.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (5 samples, 0.07%)</title><rect x="1189.2" y="293" width="0.8" height="15.0" fill="rgb(253,176,13)" rx="2" ry="2" />
<text  x="1192.23" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (24 samples, 0.31%)</title><rect x="1100.8" y="373" width="3.7" height="15.0" fill="rgb(248,87,37)" rx="2" ry="2" />
<text  x="1103.79" y="383.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.03%)</title><rect x="468.3" y="165" width="0.3" height="15.0" fill="rgb(233,23,46)" rx="2" ry="2" />
<text  x="471.27" y="175.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (75 samples, 0.98%)</title><rect x="396.4" y="69" width="11.6" height="15.0" fill="rgb(247,97,2)" rx="2" ry="2" />
<text  x="399.38" y="79.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (4,727 samples, 61.94%)</title><rect x="120.4" y="405" width="730.8" height="15.0" fill="rgb(245,178,36)" rx="2" ry="2" />
<text  x="123.39" y="415.5" >core::iter::traits::iterator::Iterator::collect</text>
</g>
<g >
<title>&lt;alloc::vec::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1180.1" y="197" width="0.2" height="15.0" fill="rgb(234,12,31)" rx="2" ry="2" />
<text  x="1183.10" y="207.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.13%)</title><rect x="720.3" y="85" width="1.5" height="15.0" fill="rgb(247,6,12)" rx="2" ry="2" />
<text  x="723.29" y="95.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (1 samples, 0.01%)</title><rect x="23.0" y="357" width="0.1" height="15.0" fill="rgb(220,13,39)" rx="2" ry="2" />
<text  x="25.99" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.05%)</title><rect x="984.5" y="309" width="0.6" height="15.0" fill="rgb(219,68,12)" rx="2" ry="2" />
<text  x="987.52" y="319.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.04%)</title><rect x="808.1" y="213" width="0.5" height="15.0" fill="rgb(205,63,45)" rx="2" ry="2" />
<text  x="811.11" y="223.5" ></text>
</g>
<g >
<title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h9f7f6e9e068e95d2 (7,630 samples, 99.97%)</title><rect x="10.3" y="469" width="1179.7" height="15.0" fill="rgb(247,229,18)" rx="2" ry="2" />
<text  x="13.31" y="479.5" >std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h9f7f6e9e068e95d2</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.12%)</title><rect x="642.8" y="277" width="1.4" height="15.0" fill="rgb(249,218,37)" rx="2" ry="2" />
<text  x="645.83" y="287.5" ></text>
</g>
<g >
<title>std::io::read_until (68 samples, 0.89%)</title><rect x="22.8" y="373" width="10.5" height="15.0" fill="rgb(220,194,9)" rx="2" ry="2" />
<text  x="25.83" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,321 samples, 30.41%)</title><rect x="142.0" y="325" width="358.9" height="15.0" fill="rgb(223,211,15)" rx="2" ry="2" />
<text  x="145.04" y="335.5" >&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::t..</text>
</g>
<g >
<title>regex::cache::imp::Cached&lt;T&gt;::get_or (56 samples, 0.73%)</title><rect x="867.8" y="341" width="8.6" height="15.0" fill="rgb(229,6,26)" rx="2" ry="2" />
<text  x="870.79" y="351.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (8 samples, 0.10%)</title><rect x="626.6" y="213" width="1.2" height="15.0" fill="rgb(205,105,30)" rx="2" ry="2" />
<text  x="629.59" y="223.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (399 samples, 5.23%)</title><rect x="1117.8" y="197" width="61.7" height="15.0" fill="rgb(213,131,50)" rx="2" ry="2" />
<text  x="1120.80" y="207.5" >&lt;std::..</text>
</g>
<g >
<title>choose::choice::Choice::get_choice_slice::_$u7b$$u7b$closure$u7d$$u7d$::h5502bfd3c1b25871 (6 samples, 0.08%)</title><rect x="471.5" y="165" width="0.9" height="15.0" fill="rgb(212,172,11)" rx="2" ry="2" />
<text  x="474.52" y="175.5" ></text>
</g>
<g >
<title>_$LT$core..iter..adapters..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::try_fold::enumerate::_$u7b$$u7b$closure$u7d$$u7d$::h14d7ae7514331ff4 (183 samples, 2.40%)</title><rect x="472.4" y="213" width="28.3" height="15.0" fill="rgb(240,199,43)" rx="2" ry="2" />
<text  x="475.44" y="223.5" >_..</text>
</g>
<g >
<title>std::panicking::update_panic_count (1 samples, 0.01%)</title><rect x="1184.3" y="261" width="0.1" height="15.0" fill="rgb(225,113,48)" rx="2" ry="2" />
<text  x="1187.28" y="271.5" ></text>
</g>
<g >
<title>choose::config::Config::parse_choice (1 samples, 0.01%)</title><rect x="10.2" y="549" width="0.1" height="15.0" fill="rgb(221,41,46)" rx="2" ry="2" />
<text  x="13.15" y="559.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="1116.1" y="133" width="0.1" height="15.0" fill="rgb(243,176,30)" rx="2" ry="2" />
<text  x="1119.10" y="143.5" ></text>
</g>
<g >
<title>regex::re_builder::unicode::RegexBuilder::build (1 samples, 0.01%)</title><rect x="10.0" y="565" width="0.2" height="15.0" fill="rgb(207,7,20)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (42 samples, 0.55%)</title><rect x="61.9" y="325" width="6.5" height="15.0" fill="rgb(228,43,28)" rx="2" ry="2" />
<text  x="64.95" y="335.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write (54 samples, 0.71%)</title><rect x="954.7" y="229" width="8.3" height="15.0" fill="rgb(221,46,40)" rx="2" ry="2" />
<text  x="957.68" y="239.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.17%)</title><rect x="710.9" y="165" width="2.0" height="15.0" fill="rgb(220,90,6)" rx="2" ry="2" />
<text  x="713.86" y="175.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="914.6" y="149" width="0.2" height="15.0" fill="rgb(226,139,38)" rx="2" ry="2" />
<text  x="917.64" y="159.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.14%)</title><rect x="85.9" y="293" width="1.7" height="15.0" fill="rgb(227,182,20)" rx="2" ry="2" />
<text  x="88.91" y="303.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (6 samples, 0.08%)</title><rect x="467.8" y="181" width="0.9" height="15.0" fill="rgb(214,134,17)" rx="2" ry="2" />
<text  x="470.81" y="191.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 1.26%)</title><rect x="777.5" y="101" width="14.8" height="15.0" fill="rgb(252,29,10)" rx="2" ry="2" />
<text  x="780.49" y="111.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::split (84 samples, 1.10%)</title><rect x="863.5" y="405" width="12.9" height="15.0" fill="rgb(251,14,27)" rx="2" ry="2" />
<text  x="866.46" y="415.5" ></text>
</g>
<g >
<title>core::alloc::Layout::repeat (15 samples, 0.20%)</title><rect x="635.3" y="261" width="2.3" height="15.0" fill="rgb(221,102,34)" rx="2" ry="2" />
<text  x="638.25" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="1024.4" y="277" width="0.2" height="15.0" fill="rgb(243,99,34)" rx="2" ry="2" />
<text  x="1027.41" y="287.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::lock (128 samples, 1.68%)</title><rect x="1038.3" y="309" width="19.8" height="15.0" fill="rgb(215,146,15)" rx="2" ry="2" />
<text  x="1041.33" y="319.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.03%)</title><rect x="974.9" y="213" width="0.3" height="15.0" fill="rgb(213,124,50)" rx="2" ry="2" />
<text  x="977.93" y="223.5" ></text>
</g>
<g >
<title>std::io::buffered::BufWriter&lt;W&gt;::flush_buf (413 samples, 5.41%)</title><rect x="1116.4" y="229" width="63.9" height="15.0" fill="rgb(235,140,18)" rx="2" ry="2" />
<text  x="1119.40" y="239.5" >std::io..</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="721.8" y="85" width="0.2" height="15.0" fill="rgb(224,117,13)" rx="2" ry="2" />
<text  x="724.83" y="95.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (89 samples, 1.17%)</title><rect x="1024.6" y="277" width="13.7" height="15.0" fill="rgb(208,226,32)" rx="2" ry="2" />
<text  x="1027.56" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (884 samples, 11.58%)</title><rect x="500.9" y="325" width="136.7" height="15.0" fill="rgb(223,143,40)" rx="2" ry="2" />
<text  x="503.89" y="335.5" >alloc::vec::Vec&lt;T..</text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.14%)</title><rect x="273.1" y="149" width="1.8" height="15.0" fill="rgb(232,226,18)" rx="2" ry="2" />
<text  x="276.15" y="159.5" ></text>
</g>
<g >
<title>thread_local::CachedThreadLocal&lt;T&gt;::get_or_try (56 samples, 0.73%)</title><rect x="867.8" y="309" width="8.6" height="15.0" fill="rgb(218,203,42)" rx="2" ry="2" />
<text  x="870.79" y="319.5" ></text>
</g>
<g >
<title>std::memchr::memrchr (58 samples, 0.76%)</title><rect x="963.0" y="229" width="9.0" height="15.0" fill="rgb(230,110,53)" rx="2" ry="2" />
<text  x="966.03" y="239.5" ></text>
</g>
<g >
<title>regex_syntax::ast::visitor::visit (1 samples, 0.01%)</title><rect x="10.0" y="437" width="0.2" height="15.0" fill="rgb(245,79,10)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="27.8" y="293" width="0.1" height="15.0" fill="rgb(216,198,44)" rx="2" ry="2" />
<text  x="30.78" y="303.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (18 samples, 0.24%)</title><rect x="1035.5" y="261" width="2.8" height="15.0" fill="rgb(250,188,6)" rx="2" ry="2" />
<text  x="1038.54" y="271.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.13%)</title><rect x="1002.3" y="197" width="1.5" height="15.0" fill="rgb(209,98,20)" rx="2" ry="2" />
<text  x="1005.30" y="207.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (106 samples, 1.39%)</title><rect x="451.0" y="197" width="16.3" height="15.0" fill="rgb(208,8,25)" rx="2" ry="2" />
<text  x="453.95" y="207.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher (56 samples, 0.73%)</title><rect x="867.8" y="357" width="8.6" height="15.0" fill="rgb(208,69,12)" rx="2" ry="2" />
<text  x="870.79" y="367.5" ></text>
</g>
<g >
<title>std::io::stdio::_print (552 samples, 7.23%)</title><rect x="1104.7" y="437" width="85.3" height="15.0" fill="rgb(253,167,1)" rx="2" ry="2" />
<text  x="1107.65" y="447.5" >std::io::s..</text>
</g>
<g >
<title>std::panicking::update_panic_count::PANIC_COUNT::__getit (1 samples, 0.01%)</title><rect x="914.6" y="197" width="0.2" height="15.0" fill="rgb(239,174,17)" rx="2" ry="2" />
<text  x="917.64" y="207.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (26 samples, 0.34%)</title><rect x="84.5" y="357" width="4.0" height="15.0" fill="rgb(240,80,2)" rx="2" ry="2" />
<text  x="87.52" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_layout (5 samples, 0.07%)</title><rect x="1099.4" y="373" width="0.8" height="15.0" fill="rgb(247,217,17)" rx="2" ry="2" />
<text  x="1102.40" y="383.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (878 samples, 11.50%)</title><rect x="662.2" y="229" width="135.7" height="15.0" fill="rgb(226,116,22)" rx="2" ry="2" />
<text  x="665.15" y="239.5" >&lt;regex::re_trait:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.04%)</title><rect x="44.0" y="373" width="0.5" height="15.0" fill="rgb(214,169,15)" rx="2" ry="2" />
<text  x="47.01" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.03%)</title><rect x="43.6" y="357" width="0.3" height="15.0" fill="rgb(241,209,28)" rx="2" ry="2" />
<text  x="46.55" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (24 samples, 0.31%)</title><rect x="1100.8" y="389" width="3.7" height="15.0" fill="rgb(218,119,36)" rx="2" ry="2" />
<text  x="1103.79" y="399.5" ></text>
</g>
<g >
<title>&lt;usize as core::ops::arith::AddAssign&gt;::add_assign (30 samples, 0.39%)</title><rect x="809.3" y="229" width="4.7" height="15.0" fill="rgb(240,162,9)" rx="2" ry="2" />
<text  x="812.34" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (91 samples, 1.19%)</title><rect x="70.5" y="309" width="14.0" height="15.0" fill="rgb(251,194,3)" rx="2" ry="2" />
<text  x="73.45" y="319.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (244 samples, 3.20%)</title><rect x="302.7" y="117" width="37.7" height="15.0" fill="rgb(230,157,33)" rx="2" ry="2" />
<text  x="305.68" y="127.5" >cor..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="15.7" y="341" width="0.2" height="15.0" fill="rgb(254,41,37)" rx="2" ry="2" />
<text  x="18.72" y="351.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::write (399 samples, 5.23%)</title><rect x="1117.8" y="165" width="61.7" height="15.0" fill="rgb(251,215,6)" rx="2" ry="2" />
<text  x="1120.80" y="175.5" >std::s..</text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (22 samples, 0.29%)</title><rect x="292.5" y="133" width="3.4" height="15.0" fill="rgb(243,171,49)" rx="2" ry="2" />
<text  x="295.48" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.05%)</title><rect x="43.2" y="389" width="0.7" height="15.0" fill="rgb(218,208,41)" rx="2" ry="2" />
<text  x="46.24" y="399.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::write (15 samples, 0.20%)</title><rect x="1113.9" y="261" width="2.3" height="15.0" fill="rgb(243,86,35)" rx="2" ry="2" />
<text  x="1116.93" y="271.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="15.7" y="357" width="0.2" height="15.0" fill="rgb(230,183,52)" rx="2" ry="2" />
<text  x="18.72" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (15 samples, 0.20%)</title><rect x="500.9" y="293" width="2.3" height="15.0" fill="rgb(218,84,15)" rx="2" ry="2" />
<text  x="503.89" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (4,652 samples, 60.95%)</title><rect x="132.0" y="373" width="719.2" height="15.0" fill="rgb(238,45,41)" rx="2" ry="2" />
<text  x="134.99" y="383.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (3 samples, 0.04%)</title><rect x="108.5" y="341" width="0.5" height="15.0" fill="rgb(242,142,30)" rx="2" ry="2" />
<text  x="111.49" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="1185.8" y="341" width="1.3" height="15.0" fill="rgb(208,31,15)" rx="2" ry="2" />
<text  x="1188.83" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (22 samples, 0.29%)</title><rect x="292.5" y="85" width="3.4" height="15.0" fill="rgb(226,198,49)" rx="2" ry="2" />
<text  x="295.48" y="95.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,213 samples, 15.89%)</title><rect x="642.8" y="341" width="187.6" height="15.0" fill="rgb(250,152,32)" rx="2" ry="2" />
<text  x="645.83" y="351.5" >&lt;core::iter::adapters::F..</text>
</g>
<g >
<title>__GI___libc_free (22 samples, 0.29%)</title><rect x="1058.4" y="341" width="3.4" height="15.0" fill="rgb(252,182,46)" rx="2" ry="2" />
<text  x="1061.43" y="351.5" ></text>
</g>
<g >
<title>std::thread::panicking (1 samples, 0.01%)</title><rect x="1184.3" y="293" width="0.1" height="15.0" fill="rgb(232,58,20)" rx="2" ry="2" />
<text  x="1187.28" y="303.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt (470 samples, 6.16%)</title><rect x="1109.1" y="357" width="72.7" height="15.0" fill="rgb(238,120,14)" rx="2" ry="2" />
<text  x="1112.14" y="367.5" >std::io:..</text>
</g>
<g >
<title>choose::choice::Choice::is_reverse_range (25 samples, 0.33%)</title><rect x="826.4" y="181" width="3.8" height="15.0" fill="rgb(216,72,13)" rx="2" ry="2" />
<text  x="829.35" y="191.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (44 samples, 0.58%)</title><rect x="800.1" y="213" width="6.8" height="15.0" fill="rgb(252,203,43)" rx="2" ry="2" />
<text  x="803.07" y="223.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.05%)</title><rect x="43.9" y="405" width="0.6" height="15.0" fill="rgb(226,148,47)" rx="2" ry="2" />
<text  x="46.86" y="415.5" ></text>
</g>
<g >
<title>__rust_maybe_catch_panic (7,630 samples, 99.97%)</title><rect x="10.3" y="517" width="1179.7" height="15.0" fill="rgb(239,12,4)" rx="2" ry="2" />
<text  x="13.31" y="527.5" >__rust_maybe_catch_panic</text>
</g>
<g >
<title>std::panicking::try (7,630 samples, 99.97%)</title><rect x="10.3" y="533" width="1179.7" height="15.0" fill="rgb(213,199,25)" rx="2" ry="2" />
<text  x="13.31" y="543.5" >std::panicking::try</text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.08%)</title><rect x="466.4" y="149" width="0.9" height="15.0" fill="rgb(222,43,30)" rx="2" ry="2" />
<text  x="469.42" y="159.5" ></text>
</g>
<g >
<title>_int_free (54 samples, 0.71%)</title><rect x="854.5" y="325" width="8.3" height="15.0" fill="rgb(227,78,1)" rx="2" ry="2" />
<text  x="857.49" y="335.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="1184.1" y="277" width="0.2" height="15.0" fill="rgb(244,77,15)" rx="2" ry="2" />
<text  x="1187.12" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.09%)</title><rect x="23.8" y="357" width="1.0" height="15.0" fill="rgb(231,45,18)" rx="2" ry="2" />
<text  x="26.76" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (6 samples, 0.08%)</title><rect x="87.6" y="261" width="0.9" height="15.0" fill="rgb(216,146,12)" rx="2" ry="2" />
<text  x="90.62" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.03%)</title><rect x="633.9" y="261" width="0.3" height="15.0" fill="rgb(249,216,43)" rx="2" ry="2" />
<text  x="636.86" y="271.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,321 samples, 30.41%)</title><rect x="142.0" y="261" width="358.9" height="15.0" fill="rgb(247,121,26)" rx="2" ry="2" />
<text  x="145.04" y="271.5" >&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter..</text>
</g>
<g >
<title>choose (7,632 samples, 100.00%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(228,178,10)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >choose</text>
</g>
<g >
<title>std::io::stdio::print_to::_$u7b$$u7b$closure$u7d$$u7d$::h9029fae50146dab1 (1,087 samples, 14.24%)</title><rect x="890.1" y="357" width="168.0" height="15.0" fill="rgb(225,51,6)" rx="2" ry="2" />
<text  x="893.05" y="367.5" >std::io::stdio::print..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="1116.1" y="197" width="0.1" height="15.0" fill="rgb(221,54,49)" rx="2" ry="2" />
<text  x="1119.10" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::amortized_new_size (6 samples, 0.08%)</title><rect x="633.2" y="277" width="1.0" height="15.0" fill="rgb(206,4,8)" rx="2" ry="2" />
<text  x="636.24" y="287.5" ></text>
</g>
<g >
<title>regex_syntax::ast::visitor::HeapVisitor::visit (1 samples, 0.01%)</title><rect x="10.0" y="421" width="0.2" height="15.0" fill="rgb(242,75,32)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>thread_local::thread_id::THREAD_ID::__getit (26 samples, 0.34%)</title><rect x="871.2" y="245" width="4.0" height="15.0" fill="rgb(212,200,28)" rx="2" ry="2" />
<text  x="874.19" y="255.5" ></text>
</g>
<g >
<title>_$LT$core..iter..adapters..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::try_fold::enumerate::_$u7b$$u7b$closure$u7d$$u7d$::h14d7ae7514331ff4 (140 samples, 1.83%)</title><rect x="808.6" y="245" width="21.6" height="15.0" fill="rgb(246,128,11)" rx="2" ry="2" />
<text  x="811.57" y="255.5" >_..</text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals::_$u7b$$u7b$closure$u7d$$u7d$::hb4a1f9e0f6d9d052 (46 samples, 0.60%)</title><rect x="712.9" y="149" width="7.1" height="15.0" fill="rgb(213,193,24)" rx="2" ry="2" />
<text  x="715.87" y="159.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::h892f45dadbffdd3c (1 samples, 0.01%)</title><rect x="1003.7" y="181" width="0.1" height="15.0" fill="rgb(249,83,35)" rx="2" ry="2" />
<text  x="1006.69" y="191.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::new (1 samples, 0.01%)</title><rect x="10.2" y="533" width="0.1" height="15.0" fill="rgb(213,173,1)" rx="2" ry="2" />
<text  x="13.15" y="543.5" ></text>
</g>
<g >
<title>regex::compile::CompileClass::compile (1 samples, 0.01%)</title><rect x="10.2" y="389" width="0.1" height="15.0" fill="rgb(250,57,19)" rx="2" ry="2" />
<text  x="13.15" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (43 samples, 0.56%)</title><rect x="956.4" y="197" width="6.6" height="15.0" fill="rgb(226,64,47)" rx="2" ry="2" />
<text  x="959.38" y="207.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (4 samples, 0.05%)</title><rect x="973.7" y="229" width="0.6" height="15.0" fill="rgb(254,164,18)" rx="2" ry="2" />
<text  x="976.70" y="239.5" ></text>
</g>
<g >
<title>__rdl_dealloc (2 samples, 0.03%)</title><rect x="854.2" y="325" width="0.3" height="15.0" fill="rgb(226,180,50)" rx="2" ry="2" />
<text  x="857.18" y="335.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.08%)</title><rect x="471.5" y="181" width="0.9" height="15.0" fill="rgb(233,112,10)" rx="2" ry="2" />
<text  x="474.52" y="191.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.34%)</title><rect x="871.2" y="261" width="4.0" height="15.0" fill="rgb(240,86,13)" rx="2" ry="2" />
<text  x="874.19" y="271.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (7,630 samples, 99.97%)</title><rect x="10.3" y="501" width="1179.7" height="15.0" fill="rgb(232,43,13)" rx="2" ry="2" />
<text  x="13.31" y="511.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>std::io::stdio::print_to (547 samples, 7.17%)</title><rect x="1105.4" y="421" width="84.6" height="15.0" fill="rgb(242,172,31)" rx="2" ry="2" />
<text  x="1108.43" y="431.5" >std::io::..</text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="914.6" y="165" width="0.2" height="15.0" fill="rgb(241,218,31)" rx="2" ry="2" />
<text  x="917.64" y="175.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.03%)</title><rect x="973.4" y="229" width="0.3" height="15.0" fill="rgb(219,80,52)" rx="2" ry="2" />
<text  x="976.39" y="239.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::GlobalAlloc for std::alloc::System&gt;::realloc (11 samples, 0.14%)</title><rect x="629.8" y="229" width="1.7" height="15.0" fill="rgb(209,69,21)" rx="2" ry="2" />
<text  x="632.84" y="239.5" ></text>
</g>
<g >
<title>regex::literal::imp::SingleByteSet::_find (549 samples, 7.19%)</title><rect x="348.9" y="101" width="84.9" height="15.0" fill="rgb(247,2,28)" rx="2" ry="2" />
<text  x="351.91" y="111.5" >regex::li..</text>
</g>
<g >
<title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="1184.3" y="277" width="0.1" height="15.0" fill="rgb(206,10,42)" rx="2" ry="2" />
<text  x="1187.28" y="287.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (126 samples, 1.65%)</title><rect x="830.7" y="293" width="19.5" height="15.0" fill="rgb(226,26,10)" rx="2" ry="2" />
<text  x="833.68" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::set_len (2 samples, 0.03%)</title><rect x="957.2" y="165" width="0.3" height="15.0" fill="rgb(223,174,6)" rx="2" ry="2" />
<text  x="960.15" y="175.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (6 samples, 0.08%)</title><rect x="87.6" y="277" width="0.9" height="15.0" fill="rgb(211,113,20)" rx="2" ry="2" />
<text  x="90.62" y="287.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (36 samples, 0.47%)</title><rect x="957.5" y="165" width="5.5" height="15.0" fill="rgb(244,145,29)" rx="2" ry="2" />
<text  x="960.46" y="175.5" ></text>
</g>
<g >
<title>regex::compile::Compiler::c_repeat_zero_or_more (1 samples, 0.01%)</title><rect x="10.2" y="421" width="0.1" height="15.0" fill="rgb(252,209,14)" rx="2" ry="2" />
<text  x="13.15" y="431.5" ></text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (36 samples, 0.47%)</title><rect x="957.5" y="149" width="5.5" height="15.0" fill="rgb(207,178,19)" rx="2" ry="2" />
<text  x="960.46" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (79 samples, 1.04%)</title><rect x="851.2" y="373" width="12.3" height="15.0" fill="rgb(210,205,26)" rx="2" ry="2" />
<text  x="854.24" y="383.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (13 samples, 0.17%)</title><rect x="720.0" y="117" width="2.0" height="15.0" fill="rgb(235,192,12)" rx="2" ry="2" />
<text  x="722.98" y="127.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (442 samples, 5.79%)</title><rect x="1112.8" y="293" width="68.4" height="15.0" fill="rgb(234,202,15)" rx="2" ry="2" />
<text  x="1115.85" y="303.5" >&lt;std::i..</text>
</g>
<g >
<title>core::ptr::drop_in_place (18 samples, 0.24%)</title><rect x="1106.4" y="357" width="2.7" height="15.0" fill="rgb(235,154,9)" rx="2" ry="2" />
<text  x="1109.35" y="367.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (6 samples, 0.08%)</title><rect x="797.9" y="229" width="0.9" height="15.0" fill="rgb(226,172,32)" rx="2" ry="2" />
<text  x="800.90" y="239.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="28.1" y="357" width="0.1" height="15.0" fill="rgb(235,24,12)" rx="2" ry="2" />
<text  x="31.09" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 1.26%)</title><rect x="777.5" y="117" width="14.8" height="15.0" fill="rgb(212,22,29)" rx="2" ry="2" />
<text  x="780.49" y="127.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (52 samples, 0.68%)</title><rect x="798.8" y="229" width="8.1" height="15.0" fill="rgb(246,73,41)" rx="2" ry="2" />
<text  x="801.83" y="239.5" ></text>
</g>
<g >
<title>choose::choice::Choice::print_choice (6,900 samples, 90.41%)</title><rect x="33.3" y="437" width="1066.9" height="15.0" fill="rgb(247,225,26)" rx="2" ry="2" />
<text  x="36.35" y="447.5" >choose::choice::Choice::print_choice</text>
</g>
<g >
<title>regex::exec::ExecBuilder::build (1 samples, 0.01%)</title><rect x="10.0" y="549" width="0.2" height="15.0" fill="rgb(226,67,29)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="806.7" y="181" width="0.2" height="15.0" fill="rgb(218,2,45)" rx="2" ry="2" />
<text  x="809.72" y="191.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="15.7" y="373" width="0.2" height="15.0" fill="rgb(215,46,25)" rx="2" ry="2" />
<text  x="18.72" y="383.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (115 samples, 1.51%)</title><rect x="451.0" y="213" width="17.7" height="15.0" fill="rgb(222,137,10)" rx="2" ry="2" />
<text  x="453.95" y="223.5" ></text>
</g>
<g >
<title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (4 samples, 0.05%)</title><rect x="1178.9" y="133" width="0.6" height="15.0" fill="rgb(212,225,11)" rx="2" ry="2" />
<text  x="1181.87" y="143.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (2 samples, 0.03%)</title><rect x="23.5" y="309" width="0.3" height="15.0" fill="rgb(228,20,19)" rx="2" ry="2" />
<text  x="26.45" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(215,220,11)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::find_at (701 samples, 9.19%)</title><rect x="689.5" y="213" width="108.4" height="15.0" fill="rgb(222,74,24)" rx="2" ry="2" />
<text  x="692.52" y="223.5" >&lt;regex::exec:..</text>
</g>
<g >
<title>_int_free (101 samples, 1.32%)</title><rect x="555.3" y="213" width="15.6" height="15.0" fill="rgb(222,224,45)" rx="2" ry="2" />
<text  x="558.32" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (3 samples, 0.04%)</title><rect x="44.0" y="389" width="0.5" height="15.0" fill="rgb(248,146,46)" rx="2" ry="2" />
<text  x="47.01" y="399.5" ></text>
</g>
<g >
<title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (399 samples, 5.23%)</title><rect x="1117.8" y="181" width="61.7" height="15.0" fill="rgb(230,56,14)" rx="2" ry="2" />
<text  x="1120.80" y="191.5" >&lt;std::..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="1116.1" y="165" width="0.1" height="15.0" fill="rgb(233,97,39)" rx="2" ry="2" />
<text  x="1119.10" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="830.4" y="357" width="0.1" height="15.0" fill="rgb(209,35,43)" rx="2" ry="2" />
<text  x="833.37" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.20%)</title><rect x="435.5" y="133" width="2.3" height="15.0" fill="rgb(213,149,12)" rx="2" ry="2" />
<text  x="438.49" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (43 samples, 0.56%)</title><rect x="956.4" y="181" width="6.6" height="15.0" fill="rgb(212,35,27)" rx="2" ry="2" />
<text  x="959.38" y="191.5" ></text>
</g>
<g >
<title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.09%)</title><rect x="130.9" y="373" width="1.1" height="15.0" fill="rgb(254,15,35)" rx="2" ry="2" />
<text  x="133.91" y="383.5" ></text>
</g>
<g >
<title>main (7,630 samples, 99.97%)</title><rect x="10.3" y="581" width="1179.7" height="15.0" fill="rgb(227,162,46)" rx="2" ry="2" />
<text  x="13.31" y="591.5" >main</text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.03%)</title><rect x="854.2" y="309" width="0.3" height="15.0" fill="rgb(218,124,47)" rx="2" ry="2" />
<text  x="857.18" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.03%)</title><rect x="633.9" y="245" width="0.3" height="15.0" fill="rgb(216,123,3)" rx="2" ry="2" />
<text  x="636.86" y="255.5" ></text>
</g>
<g >
<title>regex::re_unicode::Regex::find_iter (56 samples, 0.73%)</title><rect x="867.8" y="389" width="8.6" height="15.0" fill="rgb(206,19,2)" rx="2" ry="2" />
<text  x="870.79" y="399.5" ></text>
</g>
<g >
<title>std::io::stdio::Stdout::lock (125 samples, 1.64%)</title><rect x="984.5" y="325" width="19.3" height="15.0" fill="rgb(236,172,41)" rx="2" ry="2" />
<text  x="987.52" y="335.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (11 samples, 0.14%)</title><rect x="720.3" y="101" width="1.7" height="15.0" fill="rgb(249,79,8)" rx="2" ry="2" />
<text  x="723.29" y="111.5" ></text>
</g>
<g >
<title>std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt;::new (13 samples, 0.17%)</title><rect x="1001.8" y="293" width="2.0" height="15.0" fill="rgb(232,61,12)" rx="2" ry="2" />
<text  x="1004.84" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (2,298 samples, 30.11%)</title><rect x="145.6" y="245" width="355.3" height="15.0" fill="rgb(233,128,5)" rx="2" ry="2" />
<text  x="148.59" y="255.5" >core::iter::traits::iterator::Iterator::try_fold</text>
</g>
<g >
<title>__memchr_avx2 (32 samples, 0.42%)</title><rect x="28.4" y="325" width="4.9" height="15.0" fill="rgb(246,138,33)" rx="2" ry="2" />
<text  x="31.40" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (44 samples, 0.58%)</title><rect x="770.7" y="117" width="6.8" height="15.0" fill="rgb(219,149,40)" rx="2" ry="2" />
<text  x="773.69" y="127.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicBool::load (3 samples, 0.04%)</title><rect x="1001.8" y="245" width="0.5" height="15.0" fill="rgb(246,19,23)" rx="2" ry="2" />
<text  x="1004.84" y="255.5" ></text>
</g>
<g >
<title>core::fmt::write (462 samples, 6.05%)</title><rect x="1109.8" y="341" width="71.4" height="15.0" fill="rgb(252,86,0)" rx="2" ry="2" />
<text  x="1112.76" y="351.5" >core::fm..</text>
</g>
<g >
<title>std::panicking::update_panic_count::_$u7b$$u7b$closure$u7d$$u7d$::h892f45dadbffdd3c (1 samples, 0.01%)</title><rect x="1184.3" y="213" width="0.1" height="15.0" fill="rgb(238,103,19)" rx="2" ry="2" />
<text  x="1187.28" y="223.5" ></text>
</g>
<g >
<title>choose::config::Opt::augment_clap::_$u7b$$u7b$closure$u7d$$u7d$::hb500c0d719e572f1 (1 samples, 0.01%)</title><rect x="10.2" y="565" width="0.1" height="15.0" fill="rgb(252,216,32)" rx="2" ry="2" />
<text  x="13.15" y="575.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::ReentrantMutex::lock (106 samples, 1.39%)</title><rect x="985.4" y="293" width="16.4" height="15.0" fill="rgb(218,29,37)" rx="2" ry="2" />
<text  x="988.45" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (39 samples, 0.51%)</title><rect x="62.4" y="293" width="6.0" height="15.0" fill="rgb(234,155,32)" rx="2" ry="2" />
<text  x="65.41" y="303.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find::check::_$u7b$$u7b$closure$u7d$$u7d$::h080e6bb3659e3f62 (169 samples, 2.21%)</title><rect x="474.6" y="197" width="26.1" height="15.0" fill="rgb(234,35,22)" rx="2" ry="2" />
<text  x="477.61" y="207.5" >c..</text>
</g>
<g >
<title>choose::choice::Choice::get_choice_slice::_$u7b$$u7b$closure$u7d$$u7d$::hf629ebdeb30c9c22 (105 samples, 1.38%)</title><rect x="814.0" y="197" width="16.2" height="15.0" fill="rgb(254,228,35)" rx="2" ry="2" />
<text  x="816.98" y="207.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::ReentrantMutex::lock (15 samples, 0.20%)</title><rect x="1181.8" y="325" width="2.3" height="15.0" fill="rgb(207,70,13)" rx="2" ry="2" />
<text  x="1184.81" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,272 samples, 42.87%)</title><rect x="136.9" y="357" width="505.9" height="15.0" fill="rgb(246,221,33)" rx="2" ry="2" />
<text  x="139.94" y="367.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend</text>
</g>
<g >
<title>alloc::string::String::from_utf8_unchecked (20 samples, 0.26%)</title><rect x="111.9" y="373" width="3.1" height="15.0" fill="rgb(216,178,14)" rx="2" ry="2" />
<text  x="114.89" y="383.5" ></text>
</g>
<g >
<title>core::fmt::Arguments::new_v1 (12 samples, 0.16%)</title><rect x="118.5" y="405" width="1.9" height="15.0" fill="rgb(235,167,6)" rx="2" ry="2" />
<text  x="121.54" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (4 samples, 0.05%)</title><rect x="1057.5" y="261" width="0.6" height="15.0" fill="rgb(225,106,33)" rx="2" ry="2" />
<text  x="1060.50" y="271.5" ></text>
</g>
<g >
<title>__rust_realloc (11 samples, 0.14%)</title><rect x="631.5" y="245" width="1.7" height="15.0" fill="rgb(225,57,48)" rx="2" ry="2" />
<text  x="634.54" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="61.5" y="309" width="0.4" height="15.0" fill="rgb(238,155,51)" rx="2" ry="2" />
<text  x="64.49" y="319.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memchr (33 samples, 0.43%)</title><rect x="28.2" y="341" width="5.1" height="15.0" fill="rgb(246,203,20)" rx="2" ry="2" />
<text  x="31.24" y="351.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="28.1" y="325" width="0.1" height="15.0" fill="rgb(254,49,28)" rx="2" ry="2" />
<text  x="31.09" y="335.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (508 samples, 6.66%)</title><rect x="1105.9" y="373" width="78.5" height="15.0" fill="rgb(215,117,19)" rx="2" ry="2" />
<text  x="1108.89" y="383.5" >&lt;std::io:..</text>
</g>
<g >
<title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.14%)</title><rect x="1187.1" y="309" width="1.7" height="15.0" fill="rgb(213,206,16)" rx="2" ry="2" />
<text  x="1190.06" y="319.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (7 samples, 0.09%)</title><rect x="1002.6" y="149" width="1.1" height="15.0" fill="rgb(249,63,19)" rx="2" ry="2" />
<text  x="1005.61" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (18 samples, 0.24%)</title><rect x="25.0" y="293" width="2.8" height="15.0" fill="rgb(231,107,25)" rx="2" ry="2" />
<text  x="28.00" y="303.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="1184.3" y="245" width="0.1" height="15.0" fill="rgb(229,60,20)" rx="2" ry="2" />
<text  x="1187.28" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (77 samples, 1.01%)</title><rect x="70.8" y="277" width="11.9" height="15.0" fill="rgb(248,139,9)" rx="2" ry="2" />
<text  x="73.76" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="395.8" y="53" width="0.1" height="15.0" fill="rgb(213,227,34)" rx="2" ry="2" />
<text  x="398.76" y="63.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 1.04%)</title><rect x="851.2" y="389" width="12.3" height="15.0" fill="rgb(216,44,49)" rx="2" ry="2" />
<text  x="854.24" y="399.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (9 samples, 0.12%)</title><rect x="1106.4" y="309" width="1.3" height="15.0" fill="rgb(235,36,16)" rx="2" ry="2" />
<text  x="1109.35" y="319.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_try_fold::_$u7b$$u7b$closure$u7d$$u7d$::hb4c0dd73b12d69ab (9 samples, 0.12%)</title><rect x="471.1" y="229" width="1.3" height="15.0" fill="rgb(221,71,28)" rx="2" ry="2" />
<text  x="474.05" y="239.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (46 samples, 0.60%)</title><rect x="712.9" y="165" width="7.1" height="15.0" fill="rgb(228,71,35)" rx="2" ry="2" />
<text  x="715.87" y="175.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (3 samples, 0.04%)</title><rect x="108.5" y="357" width="0.5" height="15.0" fill="rgb(248,201,49)" rx="2" ry="2" />
<text  x="111.49" y="367.5" ></text>
</g>
<g >
<title>choose::choice::Choice::get_choice_slice::_$u7b$$u7b$closure$u7d$$u7d$::h56a3036b65774dda (1 samples, 0.01%)</title><rect x="500.7" y="213" width="0.2" height="15.0" fill="rgb(241,37,2)" rx="2" ry="2" />
<text  x="503.74" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_layout (4 samples, 0.05%)</title><rect x="862.8" y="357" width="0.7" height="15.0" fill="rgb(208,154,12)" rx="2" ry="2" />
<text  x="865.84" y="367.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.08%)</title><rect x="868.6" y="293" width="0.9" height="15.0" fill="rgb(222,134,37)" rx="2" ry="2" />
<text  x="871.56" y="303.5" ></text>
</g>
<g >
<title>&lt;usize as core::ops::arith::AddAssign&gt;::add_assign (11 samples, 0.14%)</title><rect x="472.9" y="197" width="1.7" height="15.0" fill="rgb(235,81,47)" rx="2" ry="2" />
<text  x="475.91" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find::check::_$u7b$$u7b$closure$u7d$$u7d$::hd38a2ab49ba52c64 (6 samples, 0.08%)</title><rect x="471.5" y="197" width="0.9" height="15.0" fill="rgb(225,119,18)" rx="2" ry="2" />
<text  x="474.52" y="207.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (167 samples, 2.19%)</title><rect x="408.0" y="69" width="25.8" height="15.0" fill="rgb(212,200,25)" rx="2" ry="2" />
<text  x="410.97" y="79.5" >&lt;..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (884 samples, 11.58%)</title><rect x="500.9" y="309" width="136.7" height="15.0" fill="rgb(248,18,6)" rx="2" ry="2" />
<text  x="503.89" y="319.5" >alloc::raw_vec::R..</text>
</g>
<g >
<title>&lt;usize as core::ops::arith::Add&gt;::add (1 samples, 0.01%)</title><rect x="28.1" y="293" width="0.1" height="15.0" fill="rgb(249,20,12)" rx="2" ry="2" />
<text  x="31.09" y="303.5" ></text>
</g>
<g >
<title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1181.0" y="261" width="0.2" height="15.0" fill="rgb(236,219,5)" rx="2" ry="2" />
<text  x="1184.03" y="271.5" ></text>
</g>
<g >
<title>clap::app::validator::Validator::validate_arg_values (1 samples, 0.01%)</title><rect x="10.2" y="581" width="0.1" height="15.0" fill="rgb(224,44,53)" rx="2" ry="2" />
<text  x="13.15" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_free (11 samples, 0.14%)</title><rect x="1100.8" y="357" width="1.7" height="15.0" fill="rgb(237,69,42)" rx="2" ry="2" />
<text  x="1103.79" y="367.5" ></text>
</g>
<g >
<title>&lt;&amp;usize as core::ops::arith::Add&lt;usize&gt;&gt;::add (1 samples, 0.01%)</title><rect x="28.1" y="309" width="0.1" height="15.0" fill="rgb(235,111,5)" rx="2" ry="2" />
<text  x="31.09" y="319.5" ></text>
</g>
<g >
<title>std::io::Write::write_all (448 samples, 5.87%)</title><rect x="1111.9" y="309" width="69.3" height="15.0" fill="rgb(237,48,33)" rx="2" ry="2" />
<text  x="1114.92" y="319.5" >std::io..</text>
</g>
<g >
<title>__rust_dealloc (4 samples, 0.05%)</title><rect x="1062.4" y="341" width="0.7" height="15.0" fill="rgb(236,151,36)" rx="2" ry="2" />
<text  x="1065.44" y="351.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count (3 samples, 0.04%)</title><rect x="1108.7" y="277" width="0.4" height="15.0" fill="rgb(220,165,19)" rx="2" ry="2" />
<text  x="1111.67" y="287.5" ></text>
</g>
<g >
<title>&lt;str as core::fmt::Display&gt;::fmt (6 samples, 0.08%)</title><rect x="975.2" y="293" width="1.0" height="15.0" fill="rgb(226,176,2)" rx="2" ry="2" />
<text  x="978.24" y="303.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_layout (1 samples, 0.01%)</title><rect x="1104.5" y="389" width="0.2" height="15.0" fill="rgb(208,168,5)" rx="2" ry="2" />
<text  x="1107.50" y="399.5" ></text>
</g>
<g >
<title>std::sys::unix::alloc::&lt;impl core::alloc::GlobalAlloc for std::alloc::System&gt;::alloc (6 samples, 0.08%)</title><rect x="848.3" y="261" width="0.9" height="15.0" fill="rgb(236,109,6)" rx="2" ry="2" />
<text  x="851.31" y="271.5" ></text>
</g>
<g >
<title>core::fmt::Arguments::new_v1 (3 samples, 0.04%)</title><rect x="1100.2" y="437" width="0.4" height="15.0" fill="rgb(223,44,0)" rx="2" ry="2" />
<text  x="1103.17" y="447.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find (455 samples, 5.96%)</title><rect x="722.0" y="165" width="70.3" height="15.0" fill="rgb(226,153,28)" rx="2" ry="2" />
<text  x="724.99" y="175.5" >regex::..</text>
</g>
<g >
<title>thread_local::thread_id::get (45 samples, 0.59%)</title><rect x="869.5" y="293" width="6.9" height="15.0" fill="rgb(248,118,29)" rx="2" ry="2" />
<text  x="872.49" y="303.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="1024.4" y="293" width="0.2" height="15.0" fill="rgb(254,130,13)" rx="2" ry="2" />
<text  x="1027.41" y="303.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (34 samples, 0.45%)</title><rect x="871.2" y="277" width="5.2" height="15.0" fill="rgb(210,155,25)" rx="2" ry="2" />
<text  x="874.19" y="287.5" ></text>
</g>
<g >
<title>choose::choice::Choice::get_choice_slice::_$u7b$$u7b$closure$u7d$$u7d$::hf629ebdeb30c9c22 (167 samples, 2.19%)</title><rect x="474.9" y="165" width="25.8" height="15.0" fill="rgb(240,26,44)" rx="2" ry="2" />
<text  x="477.92" y="175.5" >c..</text>
</g>
<g >
<title>__rdl_alloc (7 samples, 0.09%)</title><rect x="82.7" y="277" width="1.1" height="15.0" fill="rgb(242,22,36)" rx="2" ry="2" />
<text  x="85.67" y="287.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (169 samples, 2.21%)</title><rect x="474.6" y="181" width="26.1" height="15.0" fill="rgb(218,182,24)" rx="2" ry="2" />
<text  x="477.61" y="191.5" >c..</text>
</g>
<g >
<title>core::intrinsics::copy_nonoverlapping (42 samples, 0.55%)</title><rect x="61.9" y="309" width="6.5" height="15.0" fill="rgb(217,196,49)" rx="2" ry="2" />
<text  x="64.95" y="319.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (129 samples, 1.69%)</title><rect x="88.5" y="357" width="20.0" height="15.0" fill="rgb(218,77,34)" rx="2" ry="2" />
<text  x="91.54" y="367.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.03%)</title><rect x="974.9" y="181" width="0.3" height="15.0" fill="rgb(225,187,33)" rx="2" ry="2" />
<text  x="977.93" y="191.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.08%)</title><rect x="1115.2" y="197" width="0.9" height="15.0" fill="rgb(228,128,1)" rx="2" ry="2" />
<text  x="1118.17" y="207.5" ></text>
</g>
<g >
<title>choose::choice::Choice::get_choice_slice (6,603 samples, 86.52%)</title><rect x="37.2" y="421" width="1020.9" height="15.0" fill="rgb(253,108,8)" rx="2" ry="2" />
<text  x="40.21" y="431.5" >choose::choice::Choice::get_choice_slice</text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.01%)</title><rect x="830.2" y="229" width="0.2" height="15.0" fill="rgb(220,145,39)" rx="2" ry="2" />
<text  x="833.22" y="239.5" ></text>
</g>
<g >
<title>std::io::stdio::print_to (1,100 samples, 14.41%)</title><rect x="888.0" y="389" width="170.1" height="15.0" fill="rgb(251,75,25)" rx="2" ry="2" />
<text  x="891.04" y="399.5" >std::io::stdio::print_to</text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.07%)</title><rect x="710.1" y="181" width="0.8" height="15.0" fill="rgb(235,57,25)" rx="2" ry="2" />
<text  x="713.08" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.08%)</title><rect x="1184.4" y="373" width="1.0" height="15.0" fill="rgb(209,194,24)" rx="2" ry="2" />
<text  x="1187.43" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::borrow (2 samples, 0.03%)</title><rect x="1184.1" y="309" width="0.3" height="15.0" fill="rgb(225,79,13)" rx="2" ry="2" />
<text  x="1187.12" y="319.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="468.6" y="133" width="0.1" height="15.0" fill="rgb(250,152,22)" rx="2" ry="2" />
<text  x="471.58" y="143.5" ></text>
</g>
<g >
<title>std::memchr::memchr (33 samples, 0.43%)</title><rect x="28.2" y="357" width="5.1" height="15.0" fill="rgb(210,30,4)" rx="2" ry="2" />
<text  x="31.24" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (45 samples, 0.59%)</title><rect x="61.5" y="341" width="6.9" height="15.0" fill="rgb(253,93,45)" rx="2" ry="2" />
<text  x="64.49" y="351.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (414 samples, 5.42%)</title><rect x="1116.2" y="245" width="64.1" height="15.0" fill="rgb(230,147,26)" rx="2" ry="2" />
<text  x="1119.25" y="255.5" >&lt;std::i..</text>
</g>
<g >
<title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.31%)</title><rect x="84.8" y="325" width="3.7" height="15.0" fill="rgb(232,111,46)" rx="2" ry="2" />
<text  x="87.83" y="335.5" ></text>
</g>
<g >
<title>&lt;regex::re_unicode::Matches as core::iter::traits::iterator::Iterator&gt;::next (902 samples, 11.82%)</title><rect x="659.4" y="245" width="139.4" height="15.0" fill="rgb(213,129,36)" rx="2" ry="2" />
<text  x="662.37" y="255.5" >&lt;regex::re_unicod..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,092 samples, 14.31%)</title><rect x="889.3" y="373" width="168.8" height="15.0" fill="rgb(229,119,4)" rx="2" ry="2" />
<text  x="892.28" y="383.5" >std::thread::local::L..</text>
</g>
<g >
<title>regex::compile::Compiler::c_class (1 samples, 0.01%)</title><rect x="10.2" y="405" width="0.1" height="15.0" fill="rgb(246,221,24)" rx="2" ry="2" />
<text  x="13.15" y="415.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="1181.0" y="229" width="0.2" height="15.0" fill="rgb(232,175,32)" rx="2" ry="2" />
<text  x="1184.03" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (26 samples, 0.34%)</title><rect x="1100.6" y="437" width="4.1" height="15.0" fill="rgb(244,217,5)" rx="2" ry="2" />
<text  x="1103.63" y="447.5" ></text>
</g>
<g >
<title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (1 samples, 0.01%)</title><rect x="10.0" y="485" width="0.2" height="15.0" fill="rgb(250,13,16)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>regex::compile::Compiler::compile (1 samples, 0.01%)</title><rect x="10.2" y="485" width="0.1" height="15.0" fill="rgb(222,23,37)" rx="2" ry="2" />
<text  x="13.15" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.04%)</title><rect x="984.1" y="309" width="0.4" height="15.0" fill="rgb(207,83,15)" rx="2" ry="2" />
<text  x="987.06" y="319.5" ></text>
</g>
<g >
<title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.12%)</title><rect x="972.0" y="245" width="1.4" height="15.0" fill="rgb(238,187,15)" rx="2" ry="2" />
<text  x="975.00" y="255.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count::PANIC_COUNT::__getit (3 samples, 0.04%)</title><rect x="1108.7" y="229" width="0.4" height="15.0" fill="rgb(239,165,16)" rx="2" ry="2" />
<text  x="1111.67" y="239.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_try_fold::_$u7b$$u7b$closure$u7d$$u7d$::hf75378fdeeb87fb3 (141 samples, 1.85%)</title><rect x="808.6" y="261" width="21.8" height="15.0" fill="rgb(211,51,37)" rx="2" ry="2" />
<text  x="811.57" y="271.5" >c..</text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap_or_else (4 samples, 0.05%)</title><rect x="888.2" y="373" width="0.6" height="15.0" fill="rgb(243,182,4)" rx="2" ry="2" />
<text  x="891.20" y="383.5" ></text>
</g>
<g >
<title>std::panicking::panicking (10 samples, 0.13%)</title><rect x="1002.3" y="245" width="1.5" height="15.0" fill="rgb(224,33,25)" rx="2" ry="2" />
<text  x="1005.30" y="255.5" ></text>
</g>
<g >
<title>std::sys::unix::mutex::ReentrantMutex::unlock (120 samples, 1.57%)</title><rect x="895.8" y="293" width="18.5" height="15.0" fill="rgb(242,165,53)" rx="2" ry="2" />
<text  x="898.77" y="303.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (21 samples, 0.28%)</title><rect x="803.5" y="197" width="3.2" height="15.0" fill="rgb(220,111,41)" rx="2" ry="2" />
<text  x="806.47" y="207.5" ></text>
</g>
<g >
<title>core::ptr::write (7 samples, 0.09%)</title><rect x="850.2" y="357" width="1.0" height="15.0" fill="rgb(206,5,9)" rx="2" ry="2" />
<text  x="853.16" y="367.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1,213 samples, 15.89%)</title><rect x="642.8" y="293" width="187.6" height="15.0" fill="rgb(225,27,11)" rx="2" ry="2" />
<text  x="645.83" y="303.5" >&lt;core::iter::adapters::F..</text>
</g>
<g >
<title>alloc::alloc::realloc (829 samples, 10.86%)</title><rect x="505.1" y="261" width="128.1" height="15.0" fill="rgb(221,157,24)" rx="2" ry="2" />
<text  x="508.07" y="271.5" >alloc::alloc::re..</text>
</g>
<g >
<title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (2 samples, 0.03%)</title><rect x="13.9" y="405" width="0.3" height="15.0" fill="rgb(220,14,28)" rx="2" ry="2" />
<text  x="16.87" y="415.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.03%)</title><rect x="974.9" y="245" width="0.3" height="15.0" fill="rgb(253,196,28)" rx="2" ry="2" />
<text  x="977.93" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (271 samples, 3.55%)</title><rect x="1058.3" y="389" width="41.9" height="15.0" fill="rgb(235,148,29)" rx="2" ry="2" />
<text  x="1061.27" y="399.5" >all..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.03%)</title><rect x="974.9" y="229" width="0.3" height="15.0" fill="rgb(220,226,40)" rx="2" ry="2" />
<text  x="977.93" y="239.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::as_mut (3 samples, 0.04%)</title><rect x="1003.8" y="341" width="0.5" height="15.0" fill="rgb(242,71,31)" rx="2" ry="2" />
<text  x="1006.85" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.10%)</title><rect x="1115.0" y="213" width="1.2" height="15.0" fill="rgb(235,187,20)" rx="2" ry="2" />
<text  x="1118.01" y="223.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="468.6" y="149" width="0.1" height="15.0" fill="rgb(226,82,6)" rx="2" ry="2" />
<text  x="471.58" y="159.5" ></text>
</g>
<g >
<title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (121 samples, 1.59%)</title><rect x="985.1" y="309" width="18.7" height="15.0" fill="rgb(218,189,53)" rx="2" ry="2" />
<text  x="988.14" y="319.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="1183.8" y="309" width="0.3" height="15.0" fill="rgb(222,207,34)" rx="2" ry="2" />
<text  x="1186.82" y="319.5" ></text>
</g>
<g >
<title>regex::literal::imp::SingleByteSet::find (320 samples, 4.19%)</title><rect x="742.9" y="149" width="49.4" height="15.0" fill="rgb(215,91,48)" rx="2" ry="2" />
<text  x="745.86" y="159.5" >rege..</text>
</g>
<g >
<title>std::thread::panicking (3 samples, 0.04%)</title><rect x="1108.7" y="309" width="0.4" height="15.0" fill="rgb(217,78,31)" rx="2" ry="2" />
<text  x="1111.67" y="319.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (4 samples, 0.05%)</title><rect x="23.1" y="357" width="0.7" height="15.0" fill="rgb(226,11,8)" rx="2" ry="2" />
<text  x="26.14" y="367.5" ></text>
</g>
<g >
<title>regex::exec::ExecBuilder::build (1 samples, 0.01%)</title><rect x="10.2" y="501" width="0.1" height="15.0" fill="rgb(224,221,10)" rx="2" ry="2" />
<text  x="13.15" y="511.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::raw_lock (128 samples, 1.68%)</title><rect x="1038.3" y="293" width="19.8" height="15.0" fill="rgb(222,3,35)" rx="2" ry="2" />
<text  x="1041.33" y="303.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (109 samples, 1.43%)</title><rect x="896.2" y="277" width="16.9" height="15.0" fill="rgb(207,60,2)" rx="2" ry="2" />
<text  x="899.24" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find (2,321 samples, 30.41%)</title><rect x="142.0" y="293" width="358.9" height="15.0" fill="rgb(222,158,2)" rx="2" ry="2" />
<text  x="145.04" y="303.5" >core::iter::traits::iterator::Iterator::find</text>
</g>
<g >
<title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,213 samples, 15.89%)</title><rect x="642.8" y="357" width="187.6" height="15.0" fill="rgb(235,5,30)" rx="2" ry="2" />
<text  x="645.83" y="367.5" >&lt;core::iter::adapters::M..</text>
</g>
<g >
<title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,321 samples, 30.41%)</title><rect x="142.0" y="309" width="358.9" height="15.0" fill="rgb(243,190,51)" rx="2" ry="2" />
<text  x="145.04" y="319.5" >&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (126 samples, 1.65%)</title><rect x="830.7" y="309" width="19.5" height="15.0" fill="rgb(243,33,50)" rx="2" ry="2" />
<text  x="833.68" y="319.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::wrapping_sub (3 samples, 0.04%)</title><rect x="956.7" y="117" width="0.5" height="15.0" fill="rgb(212,54,25)" rx="2" ry="2" />
<text  x="959.69" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (266 samples, 3.49%)</title><rect x="1058.3" y="373" width="41.1" height="15.0" fill="rgb(239,204,12)" rx="2" ry="2" />
<text  x="1061.27" y="383.5" >&lt;al..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (25 samples, 0.33%)</title><rect x="1100.8" y="405" width="3.9" height="15.0" fill="rgb(230,201,33)" rx="2" ry="2" />
<text  x="1103.79" y="415.5" ></text>
</g>
<g >
<title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (16 samples, 0.21%)</title><rect x="55.5" y="357" width="2.4" height="15.0" fill="rgb(213,104,29)" rx="2" ry="2" />
<text  x="58.46" y="367.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::drain (4 samples, 0.05%)</title><rect x="1179.5" y="213" width="0.6" height="15.0" fill="rgb(254,214,50)" rx="2" ry="2" />
<text  x="1182.49" y="223.5" ></text>
</g>
<g >
<title>__memrchr_avx2 (4 samples, 0.05%)</title><rect x="1180.3" y="213" width="0.6" height="15.0" fill="rgb(224,0,50)" rx="2" ry="2" />
<text  x="1183.26" y="223.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (79 samples, 1.04%)</title><rect x="851.2" y="405" width="12.3" height="15.0" fill="rgb(214,108,13)" rx="2" ry="2" />
<text  x="854.24" y="415.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::unwrap_or_else (2 samples, 0.03%)</title><rect x="1105.6" y="405" width="0.3" height="15.0" fill="rgb(207,158,13)" rx="2" ry="2" />
<text  x="1108.58" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (127 samples, 1.66%)</title><rect x="830.5" y="325" width="19.7" height="15.0" fill="rgb(247,124,15)" rx="2" ry="2" />
<text  x="833.53" y="335.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5 samples, 0.07%)</title><rect x="926.2" y="277" width="0.8" height="15.0" fill="rgb(221,216,45)" rx="2" ry="2" />
<text  x="929.23" y="287.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="27.9" y="325" width="0.2" height="15.0" fill="rgb(226,102,30)" rx="2" ry="2" />
<text  x="30.94" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="956.7" y="149" width="0.5" height="15.0" fill="rgb(229,91,4)" rx="2" ry="2" />
<text  x="959.69" y="159.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy::_$u7b$$u7b$closure$u7d$$u7d$::h814dba5ec5b72c63 (24 samples, 0.31%)</title><rect x="84.8" y="341" width="3.7" height="15.0" fill="rgb(229,115,26)" rx="2" ry="2" />
<text  x="87.83" y="351.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find (1,213 samples, 15.89%)</title><rect x="642.8" y="325" width="187.6" height="15.0" fill="rgb(227,177,21)" rx="2" ry="2" />
<text  x="645.83" y="335.5" >core::iter::traits::iter..</text>
</g>
<g >
<title>regex_syntax::ast::parse::NestLimiter&lt;P&gt;::check (1 samples, 0.01%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(230,79,27)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="1184.3" y="229" width="0.1" height="15.0" fill="rgb(219,127,30)" rx="2" ry="2" />
<text  x="1187.28" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (6 samples, 0.08%)</title><rect x="87.6" y="245" width="0.9" height="15.0" fill="rgb(233,203,48)" rx="2" ry="2" />
<text  x="90.62" y="255.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.08%)</title><rect x="973.4" y="245" width="0.9" height="15.0" fill="rgb(237,215,22)" rx="2" ry="2" />
<text  x="976.39" y="255.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_try_fold::_$u7b$$u7b$closure$u7d$$u7d$::h0dd754fe91482fe4 (6 samples, 0.08%)</title><rect x="87.6" y="293" width="0.9" height="15.0" fill="rgb(246,171,30)" rx="2" ry="2" />
<text  x="90.62" y="303.5" ></text>
</g>
<g >
<title>regex::exec::Exec::searcher_str (56 samples, 0.73%)</title><rect x="867.8" y="373" width="8.6" height="15.0" fill="rgb(240,172,33)" rx="2" ry="2" />
<text  x="870.79" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (3 samples, 0.04%)</title><rect x="61.5" y="325" width="0.4" height="15.0" fill="rgb(231,166,46)" rx="2" ry="2" />
<text  x="64.49" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (17 samples, 0.22%)</title><rect x="25.2" y="277" width="2.6" height="15.0" fill="rgb(250,141,51)" rx="2" ry="2" />
<text  x="28.15" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.69%)</title><rect x="1004.3" y="325" width="8.2" height="15.0" fill="rgb(249,19,13)" rx="2" ry="2" />
<text  x="1007.31" y="335.5" ></text>
</g>
<g >
<title>__rust_alloc (6 samples, 0.08%)</title><rect x="849.2" y="277" width="1.0" height="15.0" fill="rgb(215,28,48)" rx="2" ry="2" />
<text  x="852.23" y="287.5" ></text>
</g>
<g >
<title>std::panicking::update_panic_count (10 samples, 0.13%)</title><rect x="1002.3" y="229" width="1.5" height="15.0" fill="rgb(222,4,20)" rx="2" ry="2" />
<text  x="1005.30" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.08%)</title><rect x="1184.4" y="357" width="1.0" height="15.0" fill="rgb(234,148,5)" rx="2" ry="2" />
<text  x="1187.43" y="367.5" ></text>
</g>
<g >
<title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="1180.9" y="277" width="0.1" height="15.0" fill="rgb(219,186,18)" rx="2" ry="2" />
<text  x="1183.88" y="287.5" ></text>
</g>
<g >
<title>&lt;std::sys_common::mutex::MutexGuard as core::ops::drop::Drop&gt;::drop (11 samples, 0.14%)</title><rect x="1187.1" y="325" width="1.7" height="15.0" fill="rgb(243,24,21)" rx="2" ry="2" />
<text  x="1190.06" y="335.5" ></text>
</g>
<g >
<title>__memrchr_avx2 (56 samples, 0.73%)</title><rect x="963.3" y="181" width="8.7" height="15.0" fill="rgb(245,94,34)" rx="2" ry="2" />
<text  x="966.34" y="191.5" ></text>
</g>
<g >
<title>regex::compile::Compiler::compile_one (1 samples, 0.01%)</title><rect x="10.2" y="469" width="0.1" height="15.0" fill="rgb(216,73,17)" rx="2" ry="2" />
<text  x="13.15" y="479.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="1116.1" y="149" width="0.1" height="15.0" fill="rgb(221,149,8)" rx="2" ry="2" />
<text  x="1119.10" y="159.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::is_char_boundary (40 samples, 0.52%)</title><rect x="460.2" y="165" width="6.2" height="15.0" fill="rgb(244,63,23)" rx="2" ry="2" />
<text  x="463.23" y="175.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeToInclusive&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="28.1" y="341" width="0.1" height="15.0" fill="rgb(238,185,10)" rx="2" ry="2" />
<text  x="31.09" y="351.5" ></text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find (892 samples, 11.69%)</title><rect x="295.9" y="133" width="137.9" height="15.0" fill="rgb(222,145,38)" rx="2" ry="2" />
<text  x="298.88" y="143.5" >regex::literal::i..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (82 samples, 1.07%)</title><rect x="279.8" y="133" width="12.7" height="15.0" fill="rgb(235,177,42)" rx="2" ry="2" />
<text  x="282.80" y="143.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (2 samples, 0.03%)</title><rect x="108.5" y="309" width="0.3" height="15.0" fill="rgb(217,193,36)" rx="2" ry="2" />
<text  x="111.49" y="319.5" ></text>
</g>
<g >
<title>__rust_alloc (5 samples, 0.07%)</title><rect x="83.8" y="277" width="0.7" height="15.0" fill="rgb(233,95,12)" rx="2" ry="2" />
<text  x="86.75" y="287.5" ></text>
</g>
<g >
<title>choose::choice::Choice::print_choice (3 samples, 0.04%)</title><rect x="118.1" y="405" width="0.4" height="15.0" fill="rgb(206,12,0)" rx="2" ry="2" />
<text  x="121.07" y="415.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::realloc (1 samples, 0.01%)</title><rect x="10.0" y="341" width="0.2" height="15.0" fill="rgb(244,164,13)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.03%)</title><rect x="17.1" y="373" width="0.3" height="15.0" fill="rgb(242,138,10)" rx="2" ry="2" />
<text  x="20.11" y="383.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (105 samples, 1.38%)</title><rect x="814.0" y="213" width="16.2" height="15.0" fill="rgb(212,179,28)" rx="2" ry="2" />
<text  x="816.98" y="223.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (389 samples, 5.10%)</title><rect x="51.7" y="373" width="60.2" height="15.0" fill="rgb(215,9,0)" rx="2" ry="2" />
<text  x="54.75" y="383.5" >alloc:..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (47 samples, 0.62%)</title><rect x="548.1" y="213" width="7.2" height="15.0" fill="rgb(253,113,18)" rx="2" ry="2" />
<text  x="551.05" y="223.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adaptor&lt;T&gt; as core::fmt::Write&gt;::write_str (312 samples, 4.09%)</title><rect x="927.0" y="293" width="48.2" height="15.0" fill="rgb(220,116,34)" rx="2" ry="2" />
<text  x="930.00" y="303.5" >&lt;std..</text>
</g>
<g >
<title>std::io::append_to_string (124 samples, 1.62%)</title><rect x="14.2" y="405" width="19.1" height="15.0" fill="rgb(254,108,34)" rx="2" ry="2" />
<text  x="17.17" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (789 samples, 10.34%)</title><rect x="505.8" y="245" width="122.0" height="15.0" fill="rgb(212,78,26)" rx="2" ry="2" />
<text  x="508.84" y="255.5" >__GI___libc_rea..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (71 samples, 0.93%)</title><rect x="1024.6" y="261" width="10.9" height="15.0" fill="rgb(230,89,40)" rx="2" ry="2" />
<text  x="1027.56" y="271.5" ></text>
</g>
<g >
<title>regex::re_trait::Matches&lt;R&gt;::text (15 samples, 0.20%)</title><rect x="468.7" y="213" width="2.4" height="15.0" fill="rgb(229,34,14)" rx="2" ry="2" />
<text  x="471.73" y="223.5" ></text>
</g>
<g >
<title>&lt;std::sys_common::mutex::MutexGuard as core::ops::drop::Drop&gt;::drop (89 samples, 1.17%)</title><rect x="1024.6" y="293" width="13.7" height="15.0" fill="rgb(223,167,20)" rx="2" ry="2" />
<text  x="1027.56" y="303.5" ></text>
</g>
<g >
<title>std::io::stdio::stdout (295 samples, 3.87%)</title><rect x="1012.5" y="341" width="45.6" height="15.0" fill="rgb(212,87,0)" rx="2" ry="2" />
<text  x="1015.51" y="351.5" >std:..</text>
</g>
<g >
<title>thread_local::thread_id::get (8 samples, 0.10%)</title><rect x="875.2" y="261" width="1.2" height="15.0" fill="rgb(242,117,13)" rx="2" ry="2" />
<text  x="878.21" y="271.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (110 samples, 1.44%)</title><rect x="725.9" y="149" width="17.0" height="15.0" fill="rgb(231,20,37)" rx="2" ry="2" />
<text  x="728.85" y="159.5" ></text>
</g>
<g >
<title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.01%)</title><rect x="57.9" y="357" width="0.2" height="15.0" fill="rgb(212,90,37)" rx="2" ry="2" />
<text  x="60.93" y="367.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="1108.7" y="261" width="0.4" height="15.0" fill="rgb(253,83,5)" rx="2" ry="2" />
<text  x="1111.67" y="271.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (4 samples, 0.05%)</title><rect x="1001.2" y="277" width="0.6" height="15.0" fill="rgb(235,141,3)" rx="2" ry="2" />
<text  x="1004.22" y="287.5" ></text>
</g>
<g >
<title>_int_realloc (667 samples, 8.74%)</title><rect x="524.7" y="229" width="103.1" height="15.0" fill="rgb(251,72,19)" rx="2" ry="2" />
<text  x="527.70" y="239.5" >_int_realloc</text>
</g>
<g >
<title>std::io::lazy::Lazy&lt;T&gt;::get (292 samples, 3.83%)</title><rect x="1013.0" y="325" width="45.1" height="15.0" fill="rgb(221,227,2)" rx="2" ry="2" />
<text  x="1015.97" y="335.5" >std:..</text>
</g>
<g >
<title>std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h35cea875c8125dbc (7,630 samples, 99.97%)</title><rect x="10.3" y="485" width="1179.7" height="15.0" fill="rgb(209,177,2)" rx="2" ry="2" />
<text  x="13.31" y="495.5" >std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h35cea875c8125dbc</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::is_empty (4 samples, 0.05%)</title><rect x="974.3" y="261" width="0.6" height="15.0" fill="rgb(214,149,34)" rx="2" ry="2" />
<text  x="977.32" y="271.5" ></text>
</g>
<g >
<title>_int_free (13 samples, 0.17%)</title><rect x="1102.5" y="357" width="2.0" height="15.0" fill="rgb(248,78,41)" rx="2" ry="2" />
<text  x="1105.49" y="367.5" ></text>
</g>
<g >
<title>core::slice::Iter&lt;T&gt;::post_inc_start (6 samples, 0.08%)</title><rect x="86.7" y="277" width="0.9" height="15.0" fill="rgb(242,5,43)" rx="2" ry="2" />
<text  x="89.69" y="287.5" ></text>
</g>
<g >
<title>regex::compile::Compiler::c_concat (1 samples, 0.01%)</title><rect x="10.2" y="437" width="0.1" height="15.0" fill="rgb(239,77,10)" rx="2" ry="2" />
<text  x="13.15" y="447.5" ></text>
</g>
<g >
<title>regex::re_trait::Matches&lt;R&gt;::text (5 samples, 0.07%)</title><rect x="806.9" y="245" width="0.7" height="15.0" fill="rgb(247,163,33)" rx="2" ry="2" />
<text  x="809.87" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (19 samples, 0.25%)</title><rect x="25.0" y="325" width="2.9" height="15.0" fill="rgb(207,2,7)" rx="2" ry="2" />
<text  x="28.00" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::realloc (829 samples, 10.86%)</title><rect x="505.1" y="277" width="128.1" height="15.0" fill="rgb(212,9,16)" rx="2" ry="2" />
<text  x="508.07" y="287.5" >&lt;alloc::alloc::G..</text>
</g>
<g >
<title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (22 samples, 0.29%)</title><rect x="292.5" y="101" width="3.4" height="15.0" fill="rgb(229,140,26)" rx="2" ry="2" />
<text  x="295.48" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (869 samples, 11.39%)</title><rect x="503.2" y="293" width="134.4" height="15.0" fill="rgb(242,84,0)" rx="2" ry="2" />
<text  x="506.21" y="303.5" >alloc::raw_vec::..</text>
</g>
<g >
<title>malloc_consolidate (144 samples, 1.89%)</title><rect x="1077.1" y="325" width="22.3" height="15.0" fill="rgb(246,119,52)" rx="2" ry="2" />
<text  x="1080.13" y="335.5" >m..</text>
</g>
<g >
<title>__rdl_dealloc (4 samples, 0.05%)</title><rect x="1061.8" y="341" width="0.6" height="15.0" fill="rgb(208,145,51)" rx="2" ry="2" />
<text  x="1064.83" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (95 samples, 1.24%)</title><rect x="832.4" y="277" width="14.7" height="15.0" fill="rgb(227,83,22)" rx="2" ry="2" />
<text  x="835.38" y="287.5" ></text>
</g>
<g >
<title>std::io::Write::write_fmt (451 samples, 5.91%)</title><rect x="914.8" y="325" width="69.7" height="15.0" fill="rgb(230,198,40)" rx="2" ry="2" />
<text  x="917.79" y="335.5" >std::io..</text>
</g>
<g >
<title>core::str::run_utf8_validation (33 samples, 0.43%)</title><rect x="17.4" y="373" width="5.1" height="15.0" fill="rgb(213,28,37)" rx="2" ry="2" />
<text  x="20.42" y="383.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (33 samples, 0.43%)</title><rect x="621.5" y="197" width="5.1" height="15.0" fill="rgb(224,195,18)" rx="2" ry="2" />
<text  x="624.49" y="207.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.05%)</title><rect x="642.2" y="277" width="0.6" height="15.0" fill="rgb(220,209,18)" rx="2" ry="2" />
<text  x="645.21" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (75 samples, 0.98%)</title><rect x="851.2" y="357" width="11.6" height="15.0" fill="rgb(220,25,23)" rx="2" ry="2" />
<text  x="854.24" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_free (16 samples, 0.21%)</title><rect x="851.7" y="325" width="2.5" height="15.0" fill="rgb(205,216,25)" rx="2" ry="2" />
<text  x="854.71" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_desugared (3,258 samples, 42.69%)</title><rect x="139.1" y="341" width="503.7" height="15.0" fill="rgb(211,120,24)" rx="2" ry="2" />
<text  x="142.10" y="351.5" >alloc::vec::Vec&lt;T&gt;::extend_desugared</text>
</g>
<g >
<title>&lt;usize as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (43 samples, 0.56%)</title><rect x="770.8" y="85" width="6.7" height="15.0" fill="rgb(207,55,34)" rx="2" ry="2" />
<text  x="773.85" y="95.5" ></text>
</g>
<g >
<title>choose::choice::Choice::get_choice_slice::_$u7b$$u7b$closure$u7d$$u7d$::h5502bfd3c1b25871 (3 samples, 0.04%)</title><rect x="808.1" y="197" width="0.5" height="15.0" fill="rgb(244,153,17)" rx="2" ry="2" />
<text  x="811.11" y="207.5" ></text>
</g>
<g >
<title>std::io::append_to_string (2 samples, 0.03%)</title><rect x="22.5" y="373" width="0.3" height="15.0" fill="rgb(210,198,16)" rx="2" ry="2" />
<text  x="25.52" y="383.5" ></text>
</g>
<g >
<title>__libc_start_main (7,630 samples, 99.97%)</title><rect x="10.3" y="597" width="1179.7" height="15.0" fill="rgb(236,32,53)" rx="2" ry="2" />
<text  x="13.31" y="607.5" >__libc_start_main</text>
</g>
<g >
<title>std::io::lazy::Lazy&lt;T&gt;::get (28 samples, 0.37%)</title><rect x="1185.7" y="357" width="4.3" height="15.0" fill="rgb(254,135,16)" rx="2" ry="2" />
<text  x="1188.67" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (89 samples, 1.17%)</title><rect x="1024.6" y="309" width="13.7" height="15.0" fill="rgb(226,199,40)" rx="2" ry="2" />
<text  x="1027.56" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (1,204 samples, 15.78%)</title><rect x="644.2" y="277" width="186.2" height="15.0" fill="rgb(227,223,7)" rx="2" ry="2" />
<text  x="647.22" y="287.5" >core::iter::traits::iter..</text>
</g>
<g >
<title>regex::re_builder::unicode::RegexBuilder::build (1 samples, 0.01%)</title><rect x="10.2" y="517" width="0.1" height="15.0" fill="rgb(232,216,19)" rx="2" ry="2" />
<text  x="13.15" y="527.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_try_fold::_$u7b$$u7b$closure$u7d$$u7d$::hb4c0dd73b12d69ab (6 samples, 0.08%)</title><rect x="807.6" y="261" width="1.0" height="15.0" fill="rgb(249,22,12)" rx="2" ry="2" />
<text  x="810.64" y="271.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (166 samples, 2.18%)</title><rect x="948.7" y="261" width="25.6" height="15.0" fill="rgb(234,180,1)" rx="2" ry="2" />
<text  x="951.65" y="271.5" >&lt;..</text>
</g>
<g >
<title>std::io::stdio::LOCAL_STDOUT::__getit (2 samples, 0.03%)</title><rect x="889.7" y="357" width="0.4" height="15.0" fill="rgb(226,152,47)" rx="2" ry="2" />
<text  x="892.74" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (3 samples, 0.04%)</title><rect x="61.5" y="293" width="0.4" height="15.0" fill="rgb(216,191,41)" rx="2" ry="2" />
<text  x="64.49" y="303.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="914.6" y="181" width="0.2" height="15.0" fill="rgb(206,7,43)" rx="2" ry="2" />
<text  x="917.64" y="191.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="1181.0" y="181" width="0.2" height="15.0" fill="rgb(220,198,38)" rx="2" ry="2" />
<text  x="1184.03" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (11 samples, 0.14%)</title><rect x="1187.1" y="341" width="1.7" height="15.0" fill="rgb(215,113,43)" rx="2" ry="2" />
<text  x="1190.06" y="351.5" ></text>
</g>
<g >
<title>&lt;usize as core::ops::arith::AddAssign&gt;::add_assign (3 samples, 0.04%)</title><rect x="807.6" y="229" width="0.5" height="15.0" fill="rgb(228,111,22)" rx="2" ry="2" />
<text  x="810.64" y="239.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.03%)</title><rect x="974.9" y="261" width="0.3" height="15.0" fill="rgb(222,118,19)" rx="2" ry="2" />
<text  x="977.93" y="271.5" ></text>
</g>
<g >
<title>&lt;std::io::buffered::LineWriter&lt;W&gt; as std::io::Write&gt;::write (125 samples, 1.64%)</title><rect x="952.7" y="245" width="19.3" height="15.0" fill="rgb(249,105,37)" rx="2" ry="2" />
<text  x="955.67" y="255.5" ></text>
</g>
<g >
<title>std::io::BufRead::read_line (124 samples, 1.62%)</title><rect x="14.2" y="421" width="19.1" height="15.0" fill="rgb(219,58,4)" rx="2" ry="2" />
<text  x="17.17" y="431.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals (527 samples, 6.91%)</title><rect x="710.9" y="181" width="81.4" height="15.0" fill="rgb(231,45,2)" rx="2" ry="2" />
<text  x="713.86" y="191.5" >regex::ex..</text>
</g>
<g >
<title>regex::literal::imp::LiteralSearcher::find::_$u7b$$u7b$closure$u7d$$u7d$::h7b07eff99fc35911 (110 samples, 1.44%)</title><rect x="725.9" y="133" width="17.0" height="15.0" fill="rgb(245,222,21)" rx="2" ry="2" />
<text  x="728.85" y="143.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (688 samples, 9.01%)</title><rect x="689.5" y="197" width="106.4" height="15.0" fill="rgb(251,182,49)" rx="2" ry="2" />
<text  x="692.52" y="207.5" >&lt;regex::exec:..</text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::ends_with (2 samples, 0.03%)</title><rect x="13.9" y="421" width="0.3" height="15.0" fill="rgb(254,32,36)" rx="2" ry="2" />
<text  x="16.87" y="431.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::get (3 samples, 0.04%)</title><rect x="1001.8" y="261" width="0.5" height="15.0" fill="rgb(211,61,16)" rx="2" ry="2" />
<text  x="1004.84" y="271.5" ></text>
</g>
<g >
<title>_$LT$core..iter..adapters..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::try_fold::enumerate::_$u7b$$u7b$closure$u7d$$u7d$::hc5536b4b8270958d (6 samples, 0.08%)</title><rect x="807.6" y="245" width="1.0" height="15.0" fill="rgb(254,202,38)" rx="2" ry="2" />
<text  x="810.64" y="255.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_mul (14 samples, 0.18%)</title><rect x="635.4" y="229" width="2.2" height="15.0" fill="rgb(239,214,47)" rx="2" ry="2" />
<text  x="638.41" y="239.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.42%)</title><rect x="274.9" y="133" width="4.9" height="15.0" fill="rgb(249,136,33)" rx="2" ry="2" />
<text  x="277.85" y="143.5" ></text>
</g>
<g >
<title>std::io::stdio::stdout (30 samples, 0.39%)</title><rect x="1185.4" y="373" width="4.6" height="15.0" fill="rgb(230,133,36)" rx="2" ry="2" />
<text  x="1188.36" y="383.5" ></text>
</g>
<g >
<title>__rust_alloc (1 samples, 0.01%)</title><rect x="27.6" y="245" width="0.2" height="15.0" fill="rgb(219,93,9)" rx="2" ry="2" />
<text  x="30.63" y="255.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.10%)</title><rect x="1115.0" y="229" width="1.2" height="15.0" fill="rgb(231,217,0)" rx="2" ry="2" />
<text  x="1118.01" y="239.5" ></text>
</g>
<g >
<title>regex::exec::ExecNoSync::find_literals (1,028 samples, 13.47%)</title><rect x="274.9" y="149" width="158.9" height="15.0" fill="rgb(235,68,42)" rx="2" ry="2" />
<text  x="277.85" y="159.5" >regex::exec::ExecNoS..</text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::split_at_mut (19 samples, 0.25%)</title><rect x="109.0" y="357" width="2.9" height="15.0" fill="rgb(232,74,54)" rx="2" ry="2" />
<text  x="111.95" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (266 samples, 3.49%)</title><rect x="1058.3" y="357" width="41.1" height="15.0" fill="rgb(242,15,53)" rx="2" ry="2" />
<text  x="1061.27" y="367.5" >all..</text>
</g>
<g >
<title>clap::app::validator::Validator::validate_matched_args (1 samples, 0.01%)</title><rect x="10.2" y="597" width="0.1" height="15.0" fill="rgb(240,41,32)" rx="2" ry="2" />
<text  x="13.15" y="607.5" ></text>
</g>
<g >
<title>all (7,632 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(207,107,40)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.17%)</title><rect x="795.9" y="197" width="2.0" height="15.0" fill="rgb(214,149,4)" rx="2" ry="2" />
<text  x="798.89" y="207.5" ></text>
</g>
<g >
<title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::index (22 samples, 0.29%)</title><rect x="292.5" y="117" width="3.4" height="15.0" fill="rgb(241,196,3)" rx="2" ry="2" />
<text  x="295.48" y="127.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (2 samples, 0.03%)</title><rect x="23.5" y="293" width="0.3" height="15.0" fill="rgb(238,154,47)" rx="2" ry="2" />
<text  x="26.45" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_write (394 samples, 5.16%)</title><rect x="1118.0" y="149" width="60.9" height="15.0" fill="rgb(214,60,2)" rx="2" ry="2" />
<text  x="1120.95" y="159.5" >__GI__..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="138.5" y="341" width="0.6" height="15.0" fill="rgb(208,147,37)" rx="2" ry="2" />
<text  x="141.48" y="351.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (2 samples, 0.03%)</title><rect x="117.8" y="389" width="0.3" height="15.0" fill="rgb(252,112,27)" rx="2" ry="2" />
<text  x="120.76" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (272 samples, 3.56%)</title><rect x="1058.1" y="405" width="42.1" height="15.0" fill="rgb(211,185,29)" rx="2" ry="2" />
<text  x="1061.12" y="415.5" >&lt;al..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (52 samples, 0.68%)</title><rect x="798.8" y="245" width="8.1" height="15.0" fill="rgb(226,2,52)" rx="2" ry="2" />
<text  x="801.83" y="255.5" ></text>
</g>
<g >
<title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (455 samples, 5.96%)</title><rect x="44.6" y="389" width="70.4" height="15.0" fill="rgb(234,76,12)" rx="2" ry="2" />
<text  x="47.63" y="399.5" >alloc::..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (19 samples, 0.25%)</title><rect x="25.0" y="309" width="2.9" height="15.0" fill="rgb(231,62,33)" rx="2" ry="2" />
<text  x="28.00" y="319.5" ></text>
</g>
<g >
<title>choose::main (7,630 samples, 99.97%)</title><rect x="10.3" y="453" width="1179.7" height="15.0" fill="rgb(251,221,39)" rx="2" ry="2" />
<text  x="13.31" y="463.5" >choose::main</text>
</g>
<g >
<title>std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt;::new (2 samples, 0.03%)</title><rect x="1184.1" y="325" width="0.3" height="15.0" fill="rgb(247,202,4)" rx="2" ry="2" />
<text  x="1187.12" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (100 samples, 1.31%)</title><rect x="93.0" y="325" width="15.5" height="15.0" fill="rgb(206,79,41)" rx="2" ry="2" />
<text  x="96.03" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (16 samples, 0.21%)</title><rect x="25.2" y="245" width="2.4" height="15.0" fill="rgb(223,127,5)" rx="2" ry="2" />
<text  x="28.15" y="255.5" ></text>
</g>
<g >
<title>&lt;regex::re_trait::Matches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.66%)</title><rect x="341.2" y="101" width="7.7" height="15.0" fill="rgb(243,222,29)" rx="2" ry="2" />
<text  x="344.18" y="111.5" ></text>
</g>
<g >
<title>core::ptr::write (30 samples, 0.39%)</title><rect x="637.6" y="325" width="4.6" height="15.0" fill="rgb(238,131,10)" rx="2" ry="2" />
<text  x="640.57" y="335.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="474.6" y="165" width="0.3" height="15.0" fill="rgb(250,187,4)" rx="2" ry="2" />
<text  x="477.61" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (45 samples, 0.59%)</title><rect x="61.5" y="357" width="6.9" height="15.0" fill="rgb(253,139,5)" rx="2" ry="2" />
<text  x="64.49" y="367.5" ></text>
</g>
<g >
<title>std::sys::unix::memchr::memrchr::memrchr_specific (4 samples, 0.05%)</title><rect x="1180.3" y="229" width="0.6" height="15.0" fill="rgb(252,88,43)" rx="2" ry="2" />
<text  x="1183.26" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (32 samples, 0.42%)</title><rect x="958.1" y="133" width="4.9" height="15.0" fill="rgb(225,112,44)" rx="2" ry="2" />
<text  x="961.08" y="143.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (167 samples, 2.19%)</title><rect x="408.0" y="85" width="25.8" height="15.0" fill="rgb(214,121,31)" rx="2" ry="2" />
<text  x="410.97" y="95.5" >&lt;..</text>
</g>
<g >
<title>std::io::BufRead::read_line::_$u7b$$u7b$closure$u7d$$u7d$::h5f3f1d2a8b05e001 (70 samples, 0.92%)</title><rect x="22.5" y="389" width="10.8" height="15.0" fill="rgb(246,15,34)" rx="2" ry="2" />
<text  x="25.52" y="399.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.03%)</title><rect x="974.9" y="197" width="0.3" height="15.0" fill="rgb(242,227,28)" rx="2" ry="2" />
<text  x="977.93" y="207.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.07%)</title><rect x="926.2" y="293" width="0.8" height="15.0" fill="rgb(212,220,42)" rx="2" ry="2" />
<text  x="929.23" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::set_len (1 samples, 0.01%)</title><rect x="13.7" y="405" width="0.2" height="15.0" fill="rgb(220,207,42)" rx="2" ry="2" />
<text  x="16.71" y="415.5" ></text>
</g>
<g >
<title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::find_at (1,312 samples, 17.19%)</title><rect x="237.3" y="165" width="202.8" height="15.0" fill="rgb(243,109,42)" rx="2" ry="2" />
<text  x="240.28" y="175.5" >&lt;regex::exec::ExecNoSync a..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (2 samples, 0.03%)</title><rect x="117.8" y="373" width="0.3" height="15.0" fill="rgb(228,120,6)" rx="2" ry="2" />
<text  x="120.76" y="383.5" ></text>
</g>
<g >
<title>std::sys_common::poison::Flag::get (1 samples, 0.01%)</title><rect x="1184.1" y="293" width="0.2" height="15.0" fill="rgb(242,46,7)" rx="2" ry="2" />
<text  x="1187.12" y="303.5" ></text>
</g>
<g >
<title>std::sys_common::mutex::Mutex::lock (8 samples, 0.10%)</title><rect x="1188.8" y="341" width="1.2" height="15.0" fill="rgb(227,41,47)" rx="2" ry="2" />
<text  x="1191.76" y="351.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::is_none (3 samples, 0.04%)</title><rect x="983.6" y="277" width="0.5" height="15.0" fill="rgb(218,217,6)" rx="2" ry="2" />
<text  x="986.59" y="287.5" ></text>
</g>
</g>
</svg>
